<type access-modifier="private" name="Trends_Chart" display-name="Тренды. Чарт" uuid="659f73ba-7fa5-4aa4-ac4d-623541275829" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="4">
	<designed target="X" value="0" ver="4"/>
	<designed target="Y" value="0" ver="4"/>
	<designed target="ZValue" value="0" ver="4"/>
	<designed target="Rotation" value="0" ver="4"/>
	<designed target="Scale" value="1" ver="4"/>
	<designed target="Visible" value="true" ver="4"/>
	<designed target="Opacity" value="1" ver="4"/>
	<designed target="Enabled" value="true" ver="4"/>
	<designed target="Tooltip" value="" ver="4"/>
	<designed target="Width" value="800" ver="4"/>
	<designed target="Height" value="600" ver="4"/>
	<designed target="RoundingRadius" value="0" ver="4"/>
	<designed target="PenColor" value="4278190080" ver="4"/>
	<designed target="PenStyle" value="1" ver="4"/>
	<designed target="PenWidth" value="1" ver="4"/>
	<designed target="BrushColor" value="4278190080" ver="4"/>
	<designed target="BrushStyle" value="0" ver="4"/>
	<object access-modifier="private" name="DebugTool_1" display-name="DebugTool_1" uuid="3b7e796e-9751-4beb-a381-813ea1041bef" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="4"/>
	<object access-modifier="private" name="Chart" display-name="Chart" uuid="da7c7838-ba58-47c0-9cfc-7a61ef2059c9" base-type="Chart" base-type-id="447c3e77-56f5-497c-950c-067da367ad6a" ver="2" cardinal="1">
		<designed target="X" value="-198" ver="2"/>
		<designed target="Y" value="-147.5" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="1500" ver="2"/>
		<designed target="Height" value="395" ver="2"/>
		<designed target="CursorPointSize" value="4" ver="2"/>
		<designed target="CursorLineWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4294967295" ver="2"/>
		<designed target="CursorColor" value="4288716964" ver="2"/>
		<designed target="CursorLineBrushStyle" value="2" ver="2"/>
		<designed target="ShowTimeLine" value="false" ver="2"/>
		<designed target="ShowLegend" value="false" ver="2"/>
		<designed target="Font" value=",8.25,-1,5,50,0,0,0,0,0" ver="2"/>
		<designed target="ZoomX" value="5" ver="2"/>
		<designed target="ZoomY" value="5" ver="2"/>
		<designed target="AutoUpdate" value="false" ver="2"/>
		<object access-modifier="private" name="Axis_X" display-name="Axis_X" uuid="2f9b9fc8-e185-48a3-92e3-26ae73a642df" base-type="Axis" base-type-id="790efceb-e3a3-4c3f-b766-9557ba52a4d3" ver="2">
			<designed target="Color" value="0xff323232" ver="2"/>
			<designed target="Type" value="1" ver="2"/>
			<designed target="Align" value="1" ver="2"/>
			<designed target="DataType" value="1" ver="2"/>
			<designed target="Ticks" value="5" ver="2"/>
			<designed target="Scale" value="0" ver="2"/>
			<designed target="ScaleLog" value="false" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="UnitPos" value="1" ver="2"/>
			<designed target="Format" value="%.4g" ver="2"/>
			<designed target="FormatT" value="hh:mm:ss.zzz
yyyy-MM-dd" ver="2"/>
			<designed target="Min" value="132702881234590000" ver="2" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561"/>
			<designed target="Max" value="116444736010300000" ver="2" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561"/>
			<designed target="AxisName" value="Время" ver="2"/>
			<designed target="AxisNamePos" value="2" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Font" value="Tahoma,10,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="OnRangeChange">
				<body kind="om">
					<![CDATA[if (!here.private.bInit)
	return;

dtnow:uint8 = DateTime.UtcNow();						// Текущее время
lb:uint8 = Variant.ToUint8(Axis_X.Min, 0);		// Левая граница отображаемого интервала
rb:uint8 = Variant.ToUint8(Axis_X.Max, 0);		// Правая граница отображаемого интервала

if (ChartMode == unit.Const.amHISTORY)
{
	pCore.private.tHistViewStart = lb;
	pCore.private.tHistViewEnd = rb;
	return;
}

pCore.private.SetRedLine(dtnow);
pCore.private.tOperRangeStart = lb;
pCore.private.tOperRangeEnd = rb;

Update();

// новое значение отображаемого интервала
newInterval: uint8 = rb - lb;
if (newInterval > 0 && newInterval != pCore.private.tCurInterval)
	pCore.private.tCurInterval = newInterval;

// корректируем хранимый оперативный интервал в зависимости от левой границы отображаемого интервала
newStoredInterval: uint4 = OperativeStoredInterval.originalValue;
if (dtnow - unit.Const.dtONE_SECOND > lb)
{
	newStoredInterval = TypeConvert.ToUint4((Math.Max(rb, dtnow) - lb) / unit.Const.dtONE_SECOND); // преобразовываем в секунды
	newStoredInterval = Math.Max(OperativeStoredInterval.originalValue, newStoredInterval);
}
OperativeStoredInterval.Update(newStoredInterval);
//DebugTool_1.Log("StoryInterval: "+DateTime.ToString(pCore.private.RightBorderStoryInterval)+" - "+DateTime.ToString(pCore.private.LeftBorderStoryInterval));

if (here.private.omSetInterval) // Если изменение границ программное
{
	here.private.omSetInterval = false;	// сброс флага
}
else	// если изменение границ пользователем
{
	pCore.private.deltaRight = rb - dtnow;	// Отклонение правой границы от текущего времени
	if (private.tMousePressed > 0)
	{
		// При управлении с помощью минитрендов интервал таймером не меняется. 
		rb = rb + private.tMousePressed;	// Надо учитывать время выставления пользователем интервала
		private.tMousePressed = 0;
	}

	if (rb < dtnow - unit.Const.dtONE_SECOND)
	{
		// Если текущее время за пределами отображаемого интервала
		pCore.private.SetPause(true);
	}
	else
	{												
		// Если пользователь вернулся к текущему времени
		pCore.private.SetPause(false);
	}
}
]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="OnClickValue">
				<body kind="om">
					<![CDATA[//DebugTool_1.Log("AxisX.OnClickValue = " + Variant.ToString(clickValue, "-"));

	// Выделение репера
	// отклонение точки клика от репера инициализируем максимальным числом - видимый диапазон 
interval:uint8 = Variant.ToUint8(Max - Min, 0);
axislength:double = Chart.Width - 100;		// Длина оси = ширина чарта - размер полей
dt:uint8 = Variant.ToUint8(interval/axislength*3, 0);	// максимальное отклонение точки клика от репера определяем как +-3рх #21407
clickMin:uint8 = Variant.ToUint8(clickValue-dt ,0);	// минимальная граница диапазона в который должен был попасть репер
clickMax:uint8 = Variant.ToUint8(clickValue+dt, 0);	// максимальная граница диапазона в который должен попасть репер
i:uint4 = 1;		
n:uint4 = TypeConvert.ToUint4(ControlLine.Length); // количество реперов
selectedReper:bool = false;
dx:uint8 = interval;
while (i < n)																			// перебираем реперы
{																													
		if (ControlLine[i].Visible)		// Если текущий репер видимый
		{					
			val:uint8 = Variant.ToUint8(ControlLine[i].Value, 0);	// точка репера
			if ((val<clickMax) && (val>clickMin))			// если точка репера попадает в границы диапазона +/-2% от точки клика
			{				
				vdx:uint8 = TypeConvert.ToUint8(Math.Abs(Variant.ToInt8(clickValue-val, 0)));	// вычисляем отклонение репера от точки клика
				if (dx > vdx)
				{ 																					// если отклонение репера меньше отклонения текущего репера
					ControlLine[i].setActive(true);						// делаем текущий репер активным
					pCore.private.ActiveReper[pCore.ActiveMode] = i;
					dx = vdx;																									// запоминаем отклонение выбранного репера
					selectedReper = true;
				}
			}
		}
		i += 1;
}


if (!selectedReper)		// если кликом не попали в другой репер
{
	if (pCore.private.CursorMode == unit.Const.cmADD_REPER)//добавление репера
	{
		AddControlLineAtTime(Variant.ToUint8(clickValue, 0));
		if (!ControlLineMultipleAdd)
			pCore.private.CursorMode = unit.Const.cmHAND_MOVE;
	}
	else		
	{
		i = 0;
		while (i < Axis_Y.Length)		// для всех осей Y
		{				
			Axis_Y[i].Scale = unit.Const.scFIXED;	// отключаем автоматическое масштабирование
			i += 1;
		}	// возврат к автоматическому масштабированию произойдет при использовании кнопки HOME.
	}
}//*/

if (pCore.private.LegendIsUse) pCore.pLegend.Update();
]]>
				</body>
			</do-on>
			<designed target="Zoom" value="10" ver="2"/>
			<do-trace access-modifier="private" target="FormatT" ver="5">
				<body>
					<![CDATA[(ShowMilliseconds)?("hh:mm:ss.zzz
yyyy-MM-dd"):("hh:mm:ss
yyyy-MM-dd")]]>
				</body>
			</do-trace>
			<designed target="ShowUnit" value="true" ver="3"/>
			<designed target="AutoWidth" value="true" ver="3"/>
			<designed target="AxisWidth" value="53" ver="3"/>
			<do-trace access-modifier="private" target="Ticks" ver="5">
				<body>
					<![CDATA[TicksCountAxisX]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Color" ver="5">
				<body>
					<![CDATA[pTheme.EditorFontColor]]>
				</body>
			</do-trace>
			<designed target="ShowBoundaryValues" value="false" ver="4"/>
			<do-trace access-modifier="private" target="ShowUnit" ver="5">
				<body>
					<![CDATA[ShowEU]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Font" ver="5">
				<body>
					<![CDATA[pTheme.AxisFont]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="Axis_Y" display-name="Axis_Y" uuid="4ade891f-526b-4262-9fe0-979fa4574726" base-type="Axis" base-type-id="790efceb-e3a3-4c3f-b766-9557ba52a4d3" ver="2" cardinal="21">
			<designed target="Color" value="0xff323232" ver="2"/>
			<designed target="Type" value="2" ver="2"/>
			<designed target="Align" value="1" ver="2"/>
			<designed target="DataType" value="0" ver="2"/>
			<designed target="Ticks" value="10" ver="2"/>
			<designed target="Scale" value="0" ver="2"/>
			<designed target="ScaleLog" value="false" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="UnitPos" value="1" ver="2"/>
			<designed target="Format" value="%.5g" ver="2"/>
			<designed target="FormatT" value="hh:mm:ss.zzz
yyyy-MM-dd" ver="2"/>
			<designed target="Min" value="0" ver="2" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<designed target="Max" value="100" ver="2" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<designed target="AxisName" value="" ver="2"/>
			<designed target="AxisNamePos" value="2" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Font" value="Tahoma,10,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="Zoom" value="10" ver="3"/>
			<designed target="ShowUnit" value="true" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="OnWheelMouse">
				<body kind="om">
					<![CDATA[// отключаем автоматическое масштабирование
Axis_Y[0].Scale = unit.Const.scFIXED;  
pParams.Charts[0].bUserScale = true;
Scale = unit.Const.scFIXED;
pParams.Axis[Index].bUserScale = true;
]]>
				</body>
			</do-on>
			<designed target="AutoWidth" value="true" ver="3"/>
			<designed target="AxisWidth" value="35" ver="3"/>
			<do-trace access-modifier="private" target="Ticks" ver="5">
				<body>
					<![CDATA[TicksCountAxisY]]>
				</body>
			</do-trace>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnClickValue">
				<body kind="om">
					<![CDATA[// отключаем автоматическое масштабирование
Axis_Y[0].Scale = unit.Const.scFIXED;  
pParams.Charts[0].bUserScale = true;
Scale = unit.Const.scFIXED;
pParams.Axis[Index].bUserScale = true;
]]>
				</body>
			</do-on>
			<do-trace access-modifier="private" target="Color" ver="5">
				<body>
					<![CDATA[pTheme.EditorFontColor]]>
				</body>
			</do-trace>
			<designed target="ShowBoundaryValues" value="false" ver="4"/>
			<do-trace access-modifier="private" target="ShowUnit" ver="5">
				<body>
					<![CDATA[ShowEU]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Font" ver="5">
				<body>
					<![CDATA[pTheme.AxisFont]]>
				</body>
			</do-trace>
			<do-trace access-modifier="private" target="Format" ver="5">
				<body>
					<![CDATA[pTheme.AxisFormat]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="Line_1" display-name="Line_1" uuid="a4ce468f-fa26-48c7-9b4e-332e6c51027d" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff0000ff" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="100" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="parent.Axis_X"/>
			<init target="Visible" ver="2" value="false"/>
			<init target="DataSource" ver="2" ref="parent.DataSource_1"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="23adf294-a3e8-4d76-8af9-cf33af8697c9" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="AxisY" ver="5" ref="parent.Axis_Y"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[1].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="f84c7a66-8287-4389-9867-491056489256" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="false" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_2" display-name="Line_2" uuid="ff77bf30-16e8-450f-a01d-1db670d5f354" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xffff0000" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="5b14a28e-abf1-4ef7-80f5-18b8359aa787" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xffff0000" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<init target="DataSource" ver="2" ref="parent.DataSource_2"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[2].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="691e35c8-9cac-4cfb-a083-9dfcd813c0c9" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="false" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_3" display-name="График: Оперативное поле" uuid="48b877bc-5b97-47da-a5da-bb27df773016" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff550000" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="0" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_3"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="2f5ededf-c5bd-4f9b-a4c5-7c8acb9bcd3f" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff550000" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[3].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="2f41b4bd-b001-4e1e-98da-7c9a6a14af13" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="false" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_4" display-name="Line_4" uuid="07395e96-3de0-4cc1-a7e6-437c38482c3c" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff55007f" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_4"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="a6b39f80-4141-4b6d-a606-eb855135a3a5" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff55007f" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[4].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="ea2a765b-0cb2-4eb7-a3d6-357b109b5b68" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_5" display-name="Line_5" uuid="43f89c30-5d63-43bd-a3c6-739a38aaeec6" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xffffaaff" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_5"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="0d475117-f6c7-4600-bbf6-315f47c4e23b" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xffffaaff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[5].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="7229c99b-dc83-4eed-8620-97d5702269c9" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_6" display-name="Line_6" uuid="5f1f7a46-3691-40c1-9f16-d5098f7aa67f" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00ff00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_6"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="080bab81-2e03-40e2-b19a-22c4e1944e98" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[6].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="6127723e-f4e2-4eae-9e1c-f1f40e1a62dd" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_7" display-name="Line_7" uuid="637377fa-4e8d-4811-9abd-bcc5a4e5dcc8" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xffaaaa7f" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_7"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="cdeb5418-baef-41a4-a209-99a8da394e4b" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xffaaaa7f" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[7].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="4d4a0794-2df1-4948-961d-645a4197081f" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_8" display-name="Line_8" uuid="f5660a19-78ac-4ef4-b0bb-fdbac9f1407d" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xffff55ff" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_8"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="f8ad7f9b-7b72-4d1b-b2c4-204faf406724" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xffff55ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[8].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="d4941663-d28b-4a14-894f-e3984cfa499a" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_9" display-name="Line_9" uuid="67d28fbf-d7b9-479a-93ba-e65e4622da9e" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff005500" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_9"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="76447710-3ea5-4b18-98d2-ffdb91234b84" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff005500" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="Tag" value="" ver="4"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[9].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="b5df2e42-b8c9-4936-a146-5f05a896e252" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_10" display-name="Line_10" uuid="2e5820ab-828b-49fe-a3e9-522e3175d652" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="DataSource" ver="2" ref="DataSource_10"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="884b25fa-39e4-4124-b4cc-798d04d4af02" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[10].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="5da12d92-4622-4804-830d-4f998f6020f0" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_11" display-name="Line_11" uuid="a0908203-fc83-4f91-8bf4-8fe5fc6b1fca" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="946cbd82-0294-40b4-abc1-589640418881" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_11"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[11].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="232c643e-9888-4151-8fb6-a9949cdde883" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_12" display-name="Line_12" uuid="4385dc3f-4330-483c-8c1b-fbbdf7797b3e" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="2f5da7a3-558a-450d-9e6e-47ec2add3948" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_12"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[12].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="2fe6496d-b38a-4996-b97e-91a0ec4c87ab" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_13" display-name="Line_13" uuid="63bd4b26-93be-4e26-a5a9-ec39a60ae96d" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="2a93bccd-aff2-4c2e-a6c1-bdbde6040346" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_13"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[13].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="ab6fc1af-a0cb-4dbd-b37a-4e8346897a00" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_14" display-name="Line_14" uuid="9c5575c4-5a4f-425f-a6f2-06543d295d45" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="358ecec9-febd-4422-b27b-7743677cc7ae" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_14"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[14].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="a8c674a1-5753-4f29-b4ed-e4aca9b322e5" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_15" display-name="Line_15" uuid="d46e4fe6-8a6d-4b96-a1d4-f8bd9190e4ce" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="24ce5529-2401-47fd-91df-9c1bf29fcd48" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_15"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[15].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="4f4a8a3f-0e57-4422-a507-1d89964ca5d5" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_16" display-name="Line_16" uuid="7fcfdf42-d787-4877-9271-e6698e7e7d14" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="b5612dfb-58d6-4dfa-b419-e17f3a2accea" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_16"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[16].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="bdb90a68-1deb-4ed1-99e9-373870ef67c4" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_17" display-name="Line_17" uuid="f4bc95ca-fc35-4c44-bfb0-a2a1714fd650" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="4657180e-edec-4af5-b041-327d545387f7" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_17"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[17].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="d63778c2-b9ad-40e8-bfab-846299de50d6" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_18" display-name="Line_18" uuid="a9eb0500-9b4e-42cb-a02b-2b13c7734370" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="973edc83-364f-46a4-8d44-5979f3396989" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_18"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[18].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="0b6aad8f-9fb6-4df8-955a-ce568990a13c" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_19" display-name="Line_19" uuid="756ecb38-2816-4b98-bff4-d3e6701b3f1d" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="34fa18d6-b0e9-496e-a61f-94f734e4fd9a" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_19"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[19].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="2150289a-d911-4667-a15a-23b09e15de87" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="Line_20" display-name="Line_20" uuid="13399590-fa95-4787-8ad9-829164c9a2cb" base-type="Line" base-type-id="3337f550-4fea-4eff-8ef4-2e7b87f33711" ver="2">
			<designed target="Color" value="0xff00aa00" ver="2"/>
			<designed target="Title" value="" ver="2"/>
			<designed target="Unit" value="" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="PointSize" value="1" ver="2"/>
			<designed target="LineBrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="zOrder" value="0" ver="2"/>
			<designed target="drawingType" value="0" ver="2"/>
			<designed target="ColumnNumberTime" value="2" ver="2"/>
			<designed target="ColumnNumberValue" value="0" ver="2"/>
			<designed target="ShowActiveControllineLabels" value="false" ver="2"/>
			<init target="AxisX" ver="2" ref="Axis_X"/>
			<init target="AxisY" ver="2" ref="Axis_Y"/>
			<init target="Visible" ver="2" value="false"/>
			<object access-modifier="private" name="Decorator_1" display-name="Decorator_1" uuid="4d986f3e-5063-46e0-af61-b62ceab4b17d" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff00aa00" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="0" ver="2"/>
				<designed target="MaxValue" value="191" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
			<designed target="Tag" value="" ver="3"/>
			<designed target="SortByServerTimeColumn" value="false" ver="4"/>
			<init target="DataSource" ver="5" ref="DataSource_20"/>
			<designed target="PointSymbolCode" value="0" ver="4"/>
			<designed target="PointVisible" value="false" ver="4"/>
			<designed target="PointSymbolFont" value="" ver="4"/>
			<do-trace access-modifier="private" target="PointVisible" ver="5">
				<body>
					<![CDATA[ShowDataPoints || (pParams.Lines[20].ItemCDT==unit.Const.cdt.STRING)]]>
				</body>
			</do-trace>
			<designed target="StringTagsYValue" value="0" ver="4" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<object access-modifier="private" name="Decorator_2" display-name="Decorator_2" uuid="cf0c702d-3e10-4abc-9bbc-2f6148ff2332" base-type="Decorator" base-type-id="19ba127f-e7de-450c-a26c-2c82fabcb98c" ver="2">
				<designed target="Color" value="0xff0000ff" ver="2"/>
				<designed target="Title" value="" ver="2"/>
				<designed target="LineWidth" value="1" ver="2"/>
				<designed target="PointSize" value="1" ver="2"/>
				<designed target="LineBrushStyle" value="2" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="MinValue" value="216" ver="2"/>
				<designed target="MaxValue" value="216" ver="2"/>
				<designed target="ColumnNumber" value="1" ver="2"/>
				<designed target="zOrder" value="100" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="DataSource_1" display-name="DataSource_1" uuid="f9a6660a-a7dc-4e82-9f3f-07fdc2ac9013" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="889b21bd-dae5-4382-88e4-2022ef07436e" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_1"/>
			</object>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(1, errorCode, rowsSave); ]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(1, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
		</object>
		<object access-modifier="private" name="DataSource_2" display-name="DataSource_2" uuid="fdb2750d-703e-45e0-afba-c80c91f4c9a7" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="cfab48c0-7052-4a57-81fd-c98219550d59" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_2"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(2, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(2, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_3" display-name="DataSource_3" uuid="12bee95a-5ee5-4e92-a83c-41c49d4b7e68" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="44119e82-0993-4aef-8713-d8c96183885b" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_3"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(3, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(3, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_4" display-name="DataSource_4" uuid="977bd912-cc68-4aec-9381-18123d71b79f" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="a28c8196-9303-4b32-be87-6ca2f177bef9" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_4"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(4, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(4, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_5" display-name="DataSource_5" uuid="34362e6d-53c2-4318-bbd0-fcefbc637d16" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="cff6bb00-ade4-46c0-8206-d312f942a83d" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_5"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(5, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(5, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_6" display-name="DataSource_6" uuid="7500a027-25dc-4482-b8b2-8263b99863a6" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="c6be14be-73fa-4ce4-8f33-47030d281522" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_6"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(6, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(6, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_7" display-name="DataSource_7" uuid="160acd39-9180-4d32-8c69-e419104b59c1" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="f8d5e3bb-f2fe-4bd2-866b-3efe4d2237ea" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_7"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(7, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(7, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_8" display-name="DataSource_8" uuid="c99cdb86-a504-4157-b917-9d5553cd1035" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="3f910ab4-b4f5-43b5-b044-ace4f92d6392" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_8"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(8, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(8, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_9" display-name="DataSource_9" uuid="ce6edfa0-8a8c-4de1-b542-bc2fb5f73172" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="8f598e6f-8544-406c-ae71-c032006e2007" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_9"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(9, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(9, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_10" display-name="DataSource_10" uuid="30012b7c-d384-4d7c-a174-acb44dd23703" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="86e1a8db-db2e-49cd-9cfd-e1ef79403f8f" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_10"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(10, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(10, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<designed target="AlignLegend" value="0" ver="2"/>
		<object access-modifier="private" name="private" display-name="private" uuid="a8c120a3-d060-4256-a722-13d6ce0c81e4" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="2">
			<designed target="X" value="8" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<object access-modifier="private" name="bMousePressed" display-name="bMousePressed" uuid="19838484-30f7-4a01-b82a-ad96610b15b9" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
			<object access-modifier="private" name="tMousePressed" display-name="tMousePressed" uuid="0667d379-8d37-45e6-9ca2-a26dd784f5ca" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="3"/>
			<designed target="ZValue" value="0" ver="3"/>
			<designed target="Opacity" value="1" ver="3"/>
			<object access-modifier="private" name="FileDataSize" display-name="FileDataSize" uuid="19461047-28bd-4908-8d8d-bb7b9ca5e9e9" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="2" cardinal="21"/>
			<init target="bMousePressed" ver="5" value="false"/>
			<init target="tMousePressed" ver="5" value="0"/>
		</object>
		<object access-modifier="private" name="DataSource_11" display-name="DataSource_11" uuid="d302d777-7c16-4138-82d6-89c6a2acd937" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="9dbd5868-d30e-4767-97b1-4fe3d5d9e40c" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_11"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(11, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(11, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_12" display-name="DataSource_12" uuid="3ee5c682-ef00-4c73-8ed5-3581f5bbc495" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="8a4b5a91-a39b-4fe0-837e-50878a7dde44" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_12"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(12, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(12, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_13" display-name="DataSource_13" uuid="cee00ac0-57bc-4532-a44d-eeedf29c266b" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="712c855b-de7e-4029-a60d-da136c5a09a0" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_13"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(13, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(13, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_14" display-name="DataSource_14" uuid="4db5c97d-ad56-4cf7-b25e-a405f8d361c1" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="1db0ea82-f103-410d-8769-4cd96d0bc761" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_14"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(14, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(14, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_15" display-name="DataSource_15" uuid="396e0df5-6148-4c3d-91a7-4e084eaea080" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="7c4a0d74-5fb4-42aa-9726-1bebc268726b" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_15"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(15, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(15, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_16" display-name="DataSource_16" uuid="71865ba3-bc58-4d4d-83c5-c2de504a3fe9" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="ae351fc3-28ad-4592-8074-179228cb4614" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_16"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(16, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(16, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_17" display-name="DataSource_17" uuid="077f035a-02b3-44f7-a29d-9a297d830bfa" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="0d96d9a5-b4c5-4617-b7ef-c4927d56cf00" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_17"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(17, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(17, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_18" display-name="DataSource_18" uuid="8366444b-8079-421d-b025-15f003aca239" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="4fa4a3a6-b564-4b49-8f18-8b7786bd4cea" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_18"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(18, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(18, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_19" display-name="DataSource_19" uuid="85792bd8-37ee-450b-ae08-d48ac238a8ff" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="76958e0a-8e49-4aaa-99c3-80fe37a28bd8" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_19"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(19, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(19, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="DataSource_20" display-name="DataSource_20" uuid="79cafefc-585e-4c2d-ab2e-26c830a6ee98" base-type="DataSource" base-type-id="22b9b931-37d6-455b-b200-df50e9527bc8" ver="2">
			<designed target="LengthReserved" value="4194304" ver="2"/>
			<object access-modifier="private" name="ApItemValueQuery_1" display-name="ApItemValueQuery_1" uuid="ac640029-9611-4055-923f-c91f83e7bdd5" base-type="ApItemValueQuery" base-type-id="66ce99c8-b124-42cf-b541-4299b9f17462" ver="2">
				<designed target="Mode" value="2" ver="2"/>
				<designed target="HistoricalRangeStart" value="0" ver="2"/>
				<designed target="HistoricalRangeEnd" value="0" ver="2"/>
				<designed target="Active" value="true" ver="2"/>
				<designed target="OperativeInterval" value="300" ver="2"/>
				<designed target="OperativeBufferSize" value="0" ver="2"/>
				<designed target="PreloadHistoricalData" value="true" ver="2"/>
				<init target="Item" ver="5" ref="initCore.Item_20"/>
			</object>
			<designed target="LoadColumns" value="true" ver="3"/>
			<designed target="Sort" value="true" ver="3"/>
			<designed target="SortColumnNumber" value="2" ver="3"/>
			<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="SaveFinished">
				<body kind="om">
					<![CDATA[DataSource_SaveFinished(20, errorCode, rowsSave);]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="5" event="ReadFinished">
				<body kind="om">
					<![CDATA[DataSource_ReadFinished(20, errorCode, message, rowsRead);
]]>
				</body>
			</do-on>
		</object>
		<designed target="Extrapolation" value="true" ver="2"/>
		<designed target="CursorMode" value="3" ver="2"/>
		<designed target="ActiveControllineColor" value="4294901760" ver="2"/>
		<designed target="ActiveControllineWidth" value="3" ver="2"/>
		<do-trace access-modifier="private" target="CursorMode" ver="5">
			<body>
				<![CDATA[pCore.private.CursorMode]]>
			</body>
		</do-trace>
		<designed target="MovePointLabels" value="true" ver="2"/>
		<designed target="EnableScaleAxisX" value="true" ver="2"/>
		<object access-modifier="private" name="ControlLine" display-name="ControlLine" uuid="96627a59-1561-42b8-b11a-b6a655adbe40" base-type="ControlLine" base-type-id="2e433efa-cce5-4c91-a032-e0721a75e119" ver="2" cardinal="21">
			<designed target="Color" value="0xff000000" ver="2"/>
			<designed target="LineWidth" value="1" ver="2"/>
			<designed target="Value" value="0" ver="2" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<designed target="BrushStyle" value="2" ver="2"/>
			<designed target="BrushOpacity" value="1" ver="2"/>
			<designed target="ShowValues" value="true" ver="2"/>
			<designed target="BgValuesColor" value="4292006610" ver="2"/>
			<designed target="BgValuesOpacity" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Format" value="%.4g" ver="2"/>
			<designed target="Font" value="Tahoma,10,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<designed target="Mode" value="0" ver="3"/>
			<object access-modifier="private" name="CrossPoint" display-name="CrossPoint" uuid="f71a6636-3d94-4440-9a43-fcb8213cedbe" base-type="CrossPoint" base-type-id="04cb0bc4-a63d-40a0-af0e-e212ca856e1a" ver="3" cardinal="21">
				<designed target="Color" value="0xff808080" ver="3"/>
				<designed target="BrushStyle" value="2" ver="3"/>
				<designed target="BrushOpacity" value="1" ver="3"/>
				<designed target="BgValuesColor" value="0xffd2d2d2" ver="3"/>
				<designed target="BgValuesOpacity" value="0.8" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Font" value="Tahoma,10,-1,5,75,0,0,0,0,0,Полужирный" ver="3"/>
				<designed target="ToolTipText" value="" ver="3"/>
				<designed target="PointSize" value="1" ver="4"/>
				<do-trace access-modifier="private" target="PointSize" ver="5">
					<body>
						<![CDATA[here.ControlLineWidth.CrossPointSize]]>
					</body>
				</do-trace>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="DataChanged">
				<body kind="om">
					<![CDATA[//  DebugTool_1.Log("DataChanged ControlLine ");
i:int4 = 1;
while (i < CrossPoint.Length)
{
	if (pParams.Lines[i].Used)
	{
		vv:variant = CrossPoint[i].GetValue(unit.Const.cpVALUE);
		if (Variant.IsEmpty(vv))
		{
			CrossPoint[i].ToolTipText = "???";
		}
		else
		{
			vvs:string = here.private.VariantToString(vv, YAxisPrecision);
//		DebugTool_1.Log("DataChanged Point:"+Str.ToString(i)+" Value:"+Str.ToString(Variant.ToFloat(vv,0)));
			vq:variant = CrossPoint[i].GetValue(unit.Const.cpQUALITY);
			vqs:string = here.private.VariantToString(vq, 0);
			CrossPoint[i].ToolTipText = vvs + " (" + vqs + ")";
			nXColumn:int4 = (ChartMode==unit.Const.amOPERATIVE) ? unit.Const.tmSOURCE : pParams.Lines[i].nXColumn; 
			if (pCore.private.LegendIsUse && UseRedLine)
				pCore.pLegend.SetVQT(pCore.pLegend.nRowInLegend[i], vv, Variant.ToUint8(Value,0)+pCore.private.TimeZone, Variant.ToUint4(vq,0), nXColumn);
		}
	}
	i += 1;
}
]]>
				</body>
			</do-on>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ChangeValue">
				<body kind="om">
					<![CDATA[//DebugTool_1.Log("ChangeValue ControlLine ");
i:int4 = 1;

while (i < CrossPoint.Length)
{
	if (pParams.Lines[i].Used)
	{
		vv:variant = CrossPoint[i].GetValue(unit.Const.cpVALUE);
		if (Variant.IsEmpty(vv))
		{
			this.CrossPoint[i].ToolTipText = "???";
		}
		else
		{
			vvs:string = here.private.VariantToString(vv, YAxisPrecision);
//		DebugTool_1.Log("DataChanged Point:"+Str.ToString(i)+" Value:"+Str.ToString(Variant.ToFloat(vv,0)));
			vq:variant = CrossPoint[i].GetValue(unit.Const.cpQUALITY);
			vqs:string = here.private.VariantToString(vq, 0);
			CrossPoint[i].ToolTipText = vvs + " (" + vqs + ")";
			nXColumn:int4 = (ChartMode==unit.Const.amOPERATIVE) ? unit.Const.tmSOURCE : pParams.Lines[i].nXColumn; 
			if (pCore.private.LegendIsUse)
  			pCore.pLegend.SetVQT(pCore.pLegend.nRowInLegend[i], vv, Variant.ToUint8(Value,0)+pCore.private.TimeZone, Variant.ToUint4(vq,0), nXColumn);
		}
	}
	i += 1;
}
]]>
				</body>
			</do-on>
			<designed target="ShowAxisValues" value="true" ver="4"/>
			<init target="Axis" ver="5" ref="Axis_X"/>
		</object>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="MousePress">
			<body kind="om">
				<![CDATA[MousePressedX = ScreenX(left, top);
MousePressedY = ScreenY(left, top);

if (buttons == 1)
{
	// На время ручных действий пользователя в области чарта добавление новых данных приостанавливается
	private.bMousePressed = true;
	private.tMousePressed = DateTime.UtcNow();
}
else
{
	pOnMouseRightClick.Invoke();
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MouseRelease">
			<body kind="om">
				<![CDATA[// После завершения действий пользователя в области чарта, востанавлаивается штатаная работа оперативного режима 
if (private.bMousePressed)
{
	private.bMousePressed = false;
	private.tMousePressed = DateTime.UtcNow() - private.tMousePressed;
}]]>
			</body>
		</do-on>
		<object access-modifier="private" name="RedLine" display-name="RedLine" uuid="b3f9ede3-749c-4920-a169-2c1f9521c842" base-type="ControlLine" base-type-id="2e433efa-cce5-4c91-a032-e0721a75e119" ver="2" cardinal="1">
			<designed target="Color" value="0xffff0000" ver="2"/>
			<designed target="LineWidth" value="2" ver="2"/>
			<designed target="Value" value="0" ver="2" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
			<designed target="BrushStyle" value="1" ver="2"/>
			<designed target="BrushOpacity" value="0.5" ver="2"/>
			<designed target="ShowValues" value="false" ver="2"/>
			<designed target="BgValuesColor" value="0xffd2d2d2" ver="2"/>
			<designed target="BgValuesOpacity" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Format" value="%.4g" ver="2"/>
			<designed target="Font" value="Tahoma,8,-1,5,50,0,0,0,0,0,Обычный" ver="2"/>
			<do-trace access-modifier="private" target="Visible" ver="5">
				<body>
					<![CDATA[UseRedLine]]>
				</body>
			</do-trace>
			<designed target="Mode" value="0" ver="3"/>
			<designed target="ShowAxisValues" value="false" ver="4"/>
			<init target="Axis" ver="5" ref="Axis_X"/>
			<object access-modifier="private" name="CrossPoint" display-name="CrossPoint" uuid="1b3dc9ea-122b-412d-8e57-ea6edc1a4630" base-type="CrossPoint" base-type-id="04cb0bc4-a63d-40a0-af0e-e212ca856e1a" ver="3" cardinal="21">
				<designed target="Color" value="0xff808080" ver="3"/>
				<designed target="BrushStyle" value="2" ver="3"/>
				<designed target="BrushOpacity" value="1" ver="3"/>
				<designed target="BgValuesColor" value="0xffd2d2d2" ver="3"/>
				<designed target="BgValuesOpacity" value="0.8" ver="3"/>
				<designed target="Visible" value="false" ver="3"/>
				<designed target="Font" value="Tahoma,10,-1,5,75,0,0,0,0,0,Полужирный" ver="3"/>
				<designed target="ToolTipText" value="" ver="3"/>
				<designed target="PointSize" value="1" ver="4"/>
				<do-trace access-modifier="private" target="PointSize" ver="5">
					<body>
						<![CDATA[here.ControlLineWidth.CrossPointSize]]>
					</body>
				</do-trace>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="DataChanged">
				<body kind="om">
					<![CDATA[if (ChartMode==unit.Const.amHISTORY || pCore.ActiveMode==unit.Const.amHISTORY || !UseRedLine.Value) return;

LegendValuesUpdate();]]>
				</body>
			</do-on>
		</object>
		<do access-modifier="private" name="GetGlobalMinX" display-name="GetGlobalMinX" ver="5" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
			<body kind="om">
				<![CDATA[vm:uint8 = 0;
vv:uint8;
if (pParams.Lines[1].Used){
	vm= Variant.ToUint8(Line_1.GetGlobalMinX(),0);
}
if (pParams.Lines[2].Used){
	vv= Variant.ToUint8(Line_2.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[3].Used){
	vv= Variant.ToUint8(Line_3.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[4].Used){
	vv= Variant.ToUint8(Line_4.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[5].Used){
	vv= Variant.ToUint8(Line_5.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[6].Used){
	vv= Variant.ToUint8(Line_6.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[7].Used){
	vv= Variant.ToUint8(Line_7.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[8].Used){
	vv= Variant.ToUint8(Line_8.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[9].Used){
	vv= Variant.ToUint8(Line_9.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[10].Used){
	vv= Variant.ToUint8(Line_10.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[11].Used){
	vv= Variant.ToUint8(Line_11.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[12].Used){
	vv= Variant.ToUint8(Line_12.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[13].Used){
	vv= Variant.ToUint8(Line_13.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[14].Used){
	vv= Variant.ToUint8(Line_14.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[15].Used){
	vv= Variant.ToUint8(Line_15.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[16].Used){
	vv= Variant.ToUint8(Line_16.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[17].Used){
	vv= Variant.ToUint8(Line_17.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[18].Used){
	vv= Variant.ToUint8(Line_18.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[19].Used){
	vv= Variant.ToUint8(Line_19.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
if (pParams.Lines[20].Used){
	vv= Variant.ToUint8(Line_20.GetGlobalMinX(),0);
	if (vv<vm) vm= vv;
}
return vm;]]>
			</body>
		</do>
		<do access-modifier="private" name="GetGlobalMaxX" display-name="GetGlobalMaxX" ver="5" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
			<body kind="om">
				<![CDATA[vm:uint8 = 0;
vv:uint8;
if (pParams.Lines[1].Used){
	vm= Variant.ToUint8(Line_1.GetGlobalMaxX(),0);
}
if (pParams.Lines[2].Used){
	vv= Variant.ToUint8(Line_2.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[3].Used){
	vv= Variant.ToUint8(Line_3.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[4].Used){
	vv= Variant.ToUint8(Line_4.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[5].Used){
	vv= Variant.ToUint8(Line_5.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[6].Used){
	vv= Variant.ToUint8(Line_6.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[7].Used){
	vv= Variant.ToUint8(Line_7.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[8].Used){
	vv= Variant.ToUint8(Line_8.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[9].Used){
	vv= Variant.ToUint8(Line_9.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[10].Used){
	vv= Variant.ToUint8(Line_10.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[11].Used){
	vv= Variant.ToUint8(Line_11.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[12].Used){
	vv= Variant.ToUint8(Line_12.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[13].Used){
	vv= Variant.ToUint8(Line_13.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[14].Used){
	vv= Variant.ToUint8(Line_14.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[15].Used){
	vv= Variant.ToUint8(Line_15.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[16].Used){
	vv= Variant.ToUint8(Line_16.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[17].Used){
	vv= Variant.ToUint8(Line_17.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[18].Used){
	vv= Variant.ToUint8(Line_18.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[19].Used){
	vv= Variant.ToUint8(Line_19.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
if (pParams.Lines[20].Used){
	vv= Variant.ToUint8(Line_20.GetGlobalMaxX(),0);
	if (vv>vm) vm= vv;
}
return vm;]]>
			</body>
		</do>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnWheelMouse">
			<body kind="om">
				<![CDATA[// для всех осей Y отключаем автоматическое масштабирование
// возврат к автоматическому масштабированию произойдет при использовании кнопки HOME.
i:int4 = 0;
while (i < Axis_Y.Length)
{
	Axis_Y[i].Scale = unit.Const.scFIXED;	
	i += 1;
}]]>
			</body>
		</do-on>
		<designed target="ShowWinOptions" value="false" ver="3"/>
		<designed target="Padding" value="50,50,50,50" ver="3"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="MouseLeave">
			<body kind="om">
				<![CDATA[// После завершения действий пользователя в области чарта, востанавлаивается штатаная работа оперативного режима 
if (private.bMousePressed)
{
	private.bMousePressed = false;
	private.tMousePressed = DateTime.UtcNow() - private.tMousePressed;
}]]>
			</body>
		</do-on>
		<designed target="ZValue" value="0" ver="3"/>
		<do access-modifier="private" name="ReloadHistory" display-name="ReloadHistory" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (index==1){
	DataSource_1.ApItemValueQuery_1.Reload();
	DataSource_1.BeginReadAsync();
	return;
}
if (index==2){
	DataSource_2.ApItemValueQuery_1.Reload();
	DataSource_2.BeginReadAsync();
	return;
}
if (index==3){
	DataSource_3.ApItemValueQuery_1.Reload();
	DataSource_3.BeginReadAsync();
	return;
}
if (index==4){
	DataSource_4.ApItemValueQuery_1.Reload();
	DataSource_4.BeginReadAsync();
	return;
}
if (index==5){
	DataSource_5.ApItemValueQuery_1.Reload();
	DataSource_5.BeginReadAsync();
	return;
}
if (index==6){
	DataSource_6.ApItemValueQuery_1.Reload();
	DataSource_6.BeginReadAsync();
	return;
}
if (index==7){
	DataSource_7.ApItemValueQuery_1.Reload();
	DataSource_7.BeginReadAsync();
	return;
}
if (index==8){
	DataSource_8.ApItemValueQuery_1.Reload();
	DataSource_8.BeginReadAsync();
	return;
}
if (index==9){
	DataSource_9.ApItemValueQuery_1.Reload();
	DataSource_9.BeginReadAsync();
	return;
}
if (index==10){
	DataSource_10.ApItemValueQuery_1.Reload();
	DataSource_10.BeginReadAsync();
	return;
}
if (index==11){
	DataSource_11.ApItemValueQuery_1.Reload();
	DataSource_11.BeginReadAsync();
	return;
}
if (index==12){
	DataSource_12.ApItemValueQuery_1.Reload();
	DataSource_12.BeginReadAsync();
	return;
}
if (index==13){
	DataSource_13.ApItemValueQuery_1.Reload();
	DataSource_13.BeginReadAsync();
	return;
}
if (index==14){
	DataSource_14.ApItemValueQuery_1.Reload();
	DataSource_14.BeginReadAsync();
	return;
}
if (index==15){
	DataSource_15.ApItemValueQuery_1.Reload();
	DataSource_15.BeginReadAsync();
	return;
}
if (index==16){
	DataSource_16.ApItemValueQuery_1.Reload();
	DataSource_16.BeginReadAsync();
	return;
}
if (index==17){
	DataSource_17.ApItemValueQuery_1.Reload();
	DataSource_17.BeginReadAsync();
	return;
}
if (index==18){
	DataSource_18.ApItemValueQuery_1.Reload();
	DataSource_18.BeginReadAsync();
	return;
}
if (index==19){
	DataSource_19.ApItemValueQuery_1.Reload();
	DataSource_19.BeginReadAsync();
	return;
}
if (index==20){
	DataSource_20.ApItemValueQuery_1.Reload();
	DataSource_20.BeginReadAsync();
	return;
}
]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="9b51024b-d6eb-4c8e-a509-9a7327bfd687" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		</do>
		<designed target="ControlLineAxisLabelsLocation" value="0" ver="4"/>
		<do access-modifier="private" name="DataSource_ReadFinished" display-name="DataSource_ReadFinished" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (ChartMode == unit.Const.amHISTORY)
{
//DebugTool_1.Log("DataSource_"+Str.ToString(index)+", Count= "+Str.ToString(UploadedFilesCount)+", nRowsRead="+Str.ToString(rowsRead)+" DataSource_1.Size: "+Str.ToString(DataSource_1.Size));
	if (LoadFilesCount == 0)
	{
		// Для графиков загруженных из истории
		Timer_ValueQuery.Active = false; 
		Timer_ValueQuery.Active = true; // Перезапускаем таймер
	
		if (errorCode > 0 && errorCode != 3)
		{ 
			error: string = sErrorMessage;
			if (error == "") error = "Ошибка чтения данных";
			QueryError[index] = pParams.Lines[index].Tag+ ": " + error;
			//DebugTool_1.Log(String.ToString(errorCode) + " - " + QueryError[index]);	
		}
		if (errorCode != 3)	RequestCounter -= 1;
	}
	else
	{
		// Для графиков загруженных из файла
		private.FileDataSize[index] = rowsRead;
		if (errorCode > 0) UploadedFilesCount = -errorCode;
		else UploadedFilesCount += 1;
		LoadFilesCount -= 1;
	}
}

Update();]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="d30508db-7eb0-4582-9db3-7e059b8b45a7" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="errorCode" display-name="" uuid="faa803e6-165f-4de0-b5cf-e3cc960c9f47" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="4"/>
			<param access-modifier="private" name="sErrorMessage" display-name="" uuid="93d1188c-7448-4e21-b868-34a234c25b69" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
			<param access-modifier="private" name="rowsRead" display-name="" uuid="9670066f-f6d8-46ce-80d6-7964f3aeea9a" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="4"/>
		</do>
		<do-trace access-modifier="private" target="ShowTimeLine" ver="5">
			<body>
				<![CDATA[ShowMiniTrends]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="BrushColor" ver="5">
			<body>
				<![CDATA[pTheme.ChartFieldColor]]>
			</body>
		</do-trace>
		<object access-modifier="private" name="zOrderCount" display-name="zOrderCount" uuid="e2f1ab16-b55a-4958-9740-43e60c8235e6" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="2"/>
		<do access-modifier="private" name="DataSource_SaveFinished" display-name="DataSource_SaveFinished" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (errorCode == 1)
{
	pCore.private.sFileError[index] = "Не достаточно прав для создания файла в указанном каталоге.";
	SavedFilesCount = -1;
}
else
{
	pCore.private.FileDataSize[index] = rowSave;
	SavedFilesCount += 1;
	// Основная обработка происходит в обработчике изменений FileSavedCount
}]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="41f6ebe3-2eb4-4566-9b3a-0546a6bed5d1" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="errorCode" display-name="" uuid="6a810c95-e7eb-4e33-9760-2bc04a788f9e" base-type="uint1" base-type-id="f73099bc-ee13-42cf-82bb-87368b826707" ver="4"/>
			<param access-modifier="private" name="rowSave" display-name="" uuid="a487022e-37f6-44b2-9ba1-e72d2f729a35" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="4"/>
		</do>
		<object access-modifier="private" name="Timer_ValueQuery" display-name="Timer_ValueQuery" uuid="1ff6e448-8e6d-4d7a-a24b-d869fc5f2c7c" base-type="Timer" base-type-id="72ba7cd4-549e-41f2-923c-2431b91f349a" ver="3">
			<designed target="Period" value="1000" ver="3"/>
			<designed target="Active" value="false" ver="3"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="OnTimer">
				<body kind="om">
					<![CDATA[i: int4 = 0;
error: string = "";
while (i < QueryError.Length)
{
	if (QueryError[i] != "")
	{
		if (error == "")
			error = QueryError[i];
		else error += "\n" + QueryError[i];
		
		QueryError[i] = "";
	}
	i += 1;
}

if (error != "")
{
	ShowError.message = error;	
	ShowError.Invoke();
}

Active = false;

if (pCore.private.LegendIsUse)
	pCore.pLegend.Update();]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="QueryError" display-name="QueryError" uuid="6c9c8886-206b-4f6f-82c2-abc4d5c07072" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3" cardinal="21"/>
		<object access-modifier="private" name="ShowError" display-name="ShowError" uuid="e896c9b0-4261-44f4-8c86-84f6aca21ae4" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="4">
			<designed target="Enabled" value="true" ver="4"/>
			<designed target="InvokeTrigger" value="false" ver="4"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="Invoked" form-action="open-dialog" form-by-id="false">
				<object access-modifier="private" uuid="5d8af4df-012e-4215-820d-2a5d45f2c2c6" base-type="MessageDialog" base-type-id="a468f863-f603-4768-ad4b-e16bc34ea78e" ver="4">
					<init target="pTheme" ver="5" ref="here.pTheme"/>
					<init target="Icon" ver="5" value="2"/>
					<init target="Buttons" ver="5" value="0"/>
					<init target="Message" ver="5">
						<expr>
							<![CDATA[message]]>
						</expr>
					</init>
					<designed target="WindowCaption" value="Внимание" ver="4"/>
				</object>
			</do-on>
			<object access-modifier="private" name="message" display-name="message" uuid="06813f1c-d69b-439f-a783-d5b45ed2e561" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</object>
		<designed target="RightExtrapolationLimit" value="0" ver="5" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409"/>
		<object access-modifier="private" name="LoadFilesCount" display-name="LoadFilesCount" uuid="2cfdb6a2-b550-4be3-b3ee-848da64b83d9" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="1"/>
		<do access-modifier="private" name="GetRedLineShift" display-name="GetRedLineShift" ver="5" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
			<body kind="om">
				<![CDATA[		// допускается сдвиг красной линии от 1 до 99 процентов
shift: uint4 = Math.Min(99, Math.Max(1, pCore.RedLineShift));
		
		// cдвиг отображаемого интервала
return pCore.private.tCurInterval * shift / 100;
]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="LinearLayout_1" display-name="LinearLayout_1" uuid="ebe796f3-0ec7-4265-95b0-efd4f6875c47" base-type="LinearLayout" base-type-id="800edd71-7303-408c-890b-8346e98f5718" ver="4">
		<designed target="Orientation" value="1" ver="4"/>
		<designed target="Gap" value="0" ver="4"/>
	</object>
	<object access-modifier="private" name="pCore" display-name="pCore" uuid="7bffbb1f-d34b-42c5-ba94-5358e746bc2f" base-type="Trends_Core" base-type-id="f0fa79fc-d3d2-43f0-9eed-88d0f13b0fa0" base-сonst="true" base-ref="true" ver="4"/>
	<object access-modifier="private" name="ChartMode" display-name="Режим чарта" uuid="90ac8767-24e3-42d6-a5ca-c2bc1db64c27" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="private" display-name="private" uuid="54ec6e05-c7ae-4fbe-8d4d-727e6b3d7cf6" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="4">
		<designed target="X" value="800" ver="4"/>
		<designed target="Y" value="300" ver="4"/>
		<designed target="ZValue" value="0" ver="4"/>
		<designed target="Rotation" value="0" ver="4"/>
		<designed target="Scale" value="1" ver="4"/>
		<designed target="Visible" value="false" ver="4"/>
		<designed target="Opacity" value="1" ver="4"/>
		<designed target="Enabled" value="true" ver="4"/>
		<designed target="Tooltip" value="" ver="4"/>
		<do access-modifier="private" name="Initializer" display-name="Initializer" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[private.bInit = true;	

Lines.SetVisible(unit.Const.ALL, false);
i:int4 = 1;
while (i < Chart.ControlLine.Length) 
{
	Chart.ControlLine[i].Visible = false; 
	i += 1;
}

i = 0; 
n:uint4 = 1;	
while (i < Chart.Axis_Y.Length)
{
	Chart.Axis_Y[i].Visible = false;
	
	// Распределение осей на правую и левую стороны
	Chart.Axis_Y[i].Align = n;
	if (i != 0) n = n ^ 3;	// Чередование чисел 1\2

	i += 1;
}

mode:uint1 = (ChartMode==unit.Const.amOPERATIVE) ? unit.Const.vqmOPERATIVE : unit.Const.vqmHISTORY;
Chart.DataSource_1.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_2.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_3.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_4.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_5.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_6.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_7.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_8.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_9.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_10.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_11.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_12.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_13.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_14.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_15.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_16.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_17.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_18.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_19.ApItemValueQuery_1.Mode = mode;
Chart.DataSource_20.ApItemValueQuery_1.Mode = mode;

i = 0;
while (i < Chart.ControlLine.Length)
{
	Chart.ControlLine[i].CrossPoint[1].SetLineID(Chart.Line_1.ID);
	Chart.ControlLine[i].CrossPoint[2].SetLineID(Chart.Line_2.ID);
	Chart.ControlLine[i].CrossPoint[3].SetLineID(Chart.Line_3.ID);
	Chart.ControlLine[i].CrossPoint[4].SetLineID(Chart.Line_4.ID);
	Chart.ControlLine[i].CrossPoint[5].SetLineID(Chart.Line_5.ID);
	Chart.ControlLine[i].CrossPoint[6].SetLineID(Chart.Line_6.ID);
	Chart.ControlLine[i].CrossPoint[7].SetLineID(Chart.Line_7.ID);
	Chart.ControlLine[i].CrossPoint[8].SetLineID(Chart.Line_8.ID);
	Chart.ControlLine[i].CrossPoint[9].SetLineID(Chart.Line_9.ID);
	Chart.ControlLine[i].CrossPoint[10].SetLineID(Chart.Line_10.ID);
	Chart.ControlLine[i].CrossPoint[11].SetLineID(Chart.Line_11.ID);
	Chart.ControlLine[i].CrossPoint[12].SetLineID(Chart.Line_12.ID);
	Chart.ControlLine[i].CrossPoint[13].SetLineID(Chart.Line_13.ID);
	Chart.ControlLine[i].CrossPoint[14].SetLineID(Chart.Line_14.ID);
	Chart.ControlLine[i].CrossPoint[15].SetLineID(Chart.Line_15.ID);
	Chart.ControlLine[i].CrossPoint[16].SetLineID(Chart.Line_16.ID);
	Chart.ControlLine[i].CrossPoint[17].SetLineID(Chart.Line_17.ID);
	Chart.ControlLine[i].CrossPoint[18].SetLineID(Chart.Line_18.ID);
	Chart.ControlLine[i].CrossPoint[19].SetLineID(Chart.Line_19.ID);
	Chart.ControlLine[i].CrossPoint[20].SetLineID(Chart.Line_20.ID);
	i += 1;
}

	Chart.RedLine.CrossPoint[1].SetLineID(Chart.Line_1.ID);
	Chart.RedLine.CrossPoint[2].SetLineID(Chart.Line_2.ID);
	Chart.RedLine.CrossPoint[3].SetLineID(Chart.Line_3.ID);
	Chart.RedLine.CrossPoint[4].SetLineID(Chart.Line_4.ID);
	Chart.RedLine.CrossPoint[5].SetLineID(Chart.Line_5.ID);
	Chart.RedLine.CrossPoint[6].SetLineID(Chart.Line_6.ID);
	Chart.RedLine.CrossPoint[7].SetLineID(Chart.Line_7.ID);
	Chart.RedLine.CrossPoint[8].SetLineID(Chart.Line_8.ID);
	Chart.RedLine.CrossPoint[9].SetLineID(Chart.Line_9.ID);
	Chart.RedLine.CrossPoint[10].SetLineID(Chart.Line_10.ID);
	Chart.RedLine.CrossPoint[11].SetLineID(Chart.Line_11.ID);
	Chart.RedLine.CrossPoint[12].SetLineID(Chart.Line_12.ID);
	Chart.RedLine.CrossPoint[13].SetLineID(Chart.Line_13.ID);
	Chart.RedLine.CrossPoint[14].SetLineID(Chart.Line_14.ID);
	Chart.RedLine.CrossPoint[15].SetLineID(Chart.Line_15.ID);
	Chart.RedLine.CrossPoint[16].SetLineID(Chart.Line_16.ID);
	Chart.RedLine.CrossPoint[17].SetLineID(Chart.Line_17.ID);
	Chart.RedLine.CrossPoint[18].SetLineID(Chart.Line_18.ID);
	Chart.RedLine.CrossPoint[19].SetLineID(Chart.Line_19.ID);
	Chart.RedLine.CrossPoint[20].SetLineID(Chart.Line_20.ID);
]]>
			</body>
		</do>
		<object access-modifier="private" name="bInit" display-name="bInit" uuid="3a6aab87-e897-4f08-acf0-3feeee78b5d6" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
		<init target="bInit" ver="5" value="false"/>
		<object access-modifier="private" name="omSetInterval" display-name="omSetInterval" uuid="626e58e0-eab6-4642-ac18-a6c96262acd9" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
		<do access-modifier="private" name="VariantToString" display-name="VariantToString" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<param access-modifier="private" name="value" display-name="" uuid="f0f31b50-6c29-4eb3-9d8f-167bfb72dc91" base-type="variant" base-type-id="7d3322c1-a2cf-4732-a957-abd69e3e4b7a" ver="4"/>
			<body kind="om">
				<![CDATA[	result:string;

	if (Variant.IsFloat(value) || Variant.IsDouble(value))
	{
			result = ValueRound(Variant.ToDouble(value, -1), precision);
	}
	else if (Variant.IsBool(value))
	{
			result = Variant.ToBool(value, false)? "1" : "0";
	}
	else if (Variant.IsString(value))
	{
			result = Variant.ToString(value, "");
	}
	else 
	{
			result = Str.ToString(Variant.ToInt8(value, 0));		
	}
return result;]]>
			</body>
			<param access-modifier="private" name="precision" display-name="" uuid="3b6eb3cb-9e93-4bbc-8d2e-bd7a3cc94516" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
		<do access-modifier="private" name="ValueRound" display-name="ValueRound" ver="5" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
			<body kind="javascript">
				<![CDATA[return value.toFixed(numDecimals);
/*ValRound: double = Math.Round(Value,  TypeConvert.ToUint4(NumDecimals));
if (NumDecimals > 0) {NumDecimals += 1;} 
else {NumDecimals = 0;}
LenValStr: int4 = Str.Length(Str.ToString(TypeConvert.ToInt4(Math.Truncate(Value)))) +  NumDecimals;
ColForRemove: int4 = Str.Length(Str.ToString(ValRound)) - LenValStr;
ValString: string = Str.Remove(Str.ToString(ValRound), LenValStr, ColForRemove);
return ValString;//*/

]]>
			</body>
			<param access-modifier="private" name="value" display-name="" uuid="5bbc14a2-191b-4652-92ea-a52eb03eec8e" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="2"/>
			<param access-modifier="private" name="numDecimals" display-name="" uuid="7a0b53af-034a-460e-b92d-558f735bdba7" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
		</do>
		<object access-modifier="private" name="ExportTempPath" display-name="ExportTempPath" uuid="37b01455-8e96-4b22-aa27-8644e976f297" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="1"/>
		<object access-modifier="private" name="FileLoadCount" display-name="FileLoadCount" uuid="82f0c53f-35ed-4755-a30b-7afa478c8e80" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
		<object access-modifier="private" name="nItemReservedForEx" display-name="nItemReservedForEx" uuid="305adeb2-8c66-41b8-a6c0-acacaa52b97f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5" description="" cardinal="21"/>
		<do access-modifier="private" name="CoreExist" display-name="CoreExist" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<body kind="om">
				<![CDATA[return pCore.GraphicThickness > 0;]]>
			</body>
		</do>
		<do access-modifier="private" name="Restart_OperativeMode" display-name="Restart_OperativeMode" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[i:int4 = 1;
while (i < unit.Const.MAX_LINES)
{
	Lines.BeginReadRT(i);
	i += 1;
}]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="ControlLineWidth" display-name="Ширина реперных линий" uuid="19387c85-8cc1-4193-be9d-eee9561bdaf4" base-type="notifying_float4" base-type-id="bb7d05ee-cbf0-4c44-8740-1905239c8ead" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[i:int4 = 0;
while (i < Chart.ControlLine.Length)
{
	Chart.ControlLine[i].LineWidth = value;
	i = i + 1;
}
Chart.Update();
]]>
			</body>
		</do-on>
		<object access-modifier="private" name="CrossPointSize" display-name="CrossPointSize" uuid="4ef1dcd1-bcf1-4ff5-b8b7-be877040e652" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="4"/>
		<do-trace access-modifier="private" target="CrossPointSize" ver="5">
			<body>
				<![CDATA[TypeConvert.ToUint4(this.Value * 1.5) + 3]]>
			</body>
		</do-trace>
	</object>
	<object access-modifier="private" name="ControlLineSelectWidth" display-name="Ширина выделенной реперной линии" uuid="1724254d-535a-46c9-b033-098d04183664" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[Chart.ActiveControllineWidth = value;
Chart.Update();
]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ControlLineColor" display-name="Цвет реперных линий" uuid="36798533-ddc9-4eee-b34b-06db2ce70b24" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[i:int4 = 0;
while (i < Chart.ControlLine.Length)
{
	Chart.ControlLine[i].Color = value;
	i = i + 1;
}
Chart.Update();
]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ControlLineSelectColor" display-name="Цвет выделенной реперной линии" uuid="4535404a-57a1-4b65-be18-f6b1c81f700d" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="3">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[Chart.ActiveControllineColor = value;
Chart.Update();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ControlLineMultipleAdd" display-name="Множественное добавление реперов" uuid="5a38a780-19ad-4bd3-8320-e35a10569725" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
	<object access-modifier="private" name="ShowEU" display-name="Видимость единиц измерений" uuid="1671eec2-0bb0-44ac-92c6-bf3838269d68" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[i:int4 = 0;
while (i < Chart.Axis_Y.Length)
{
	Chart.Axis_Y[i].ShowUnit = value;
	i = i + 1;
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowMarkerLabels" display-name="Видимость выносок реперов" uuid="6cabe6d8-6a35-4978-8fd6-f57236e15873" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//DebugTool_1.Log("ShowMarkerLabels.Value="+Str.ToString(Value));
i:int4 = 1;		
while (i < Chart.ControlLine.CrossPoint.Length)
{
	pParams.Lines[i].bShowMarkerLabels = value;
	SetMarkerLabelVisible(i, value);
	i += 1;
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="ShowDataPoints" display-name="Видимость точек на графиках" uuid="665bdf82-ee2c-4d3b-9d28-8dc849df6ed1" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[
Lines.Update();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="DeltaLineWidth" display-name="Утолщение выделенного графика" uuid="83fd3b44-70bd-481a-a8b3-65b05f5a09a9" base-type="notifying_float4" base-type-id="bb7d05ee-cbf0-4c44-8740-1905239c8ead" ver="2"/>
	<do access-modifier="private" name="GetNextReper" display-name="GetNextReper" ver="5" type="uint4" type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e">
		<body kind="om">
			<![CDATA[// Поиск доступного репера для установки
i:uint4 = 1;
n:int4 = TypeConvert.ToInt4( Chart.ControlLine.Length-1);
	// перебираем реперы в поисках свободного (невидимого)
while (i<n && Chart.ControlLine[i].Visible==true) { i += 1; }
if (i == n)			// Проверяем последний репер
{				
		if (Chart.ControlLine[i].Visible == true){// если все реперы уже установлены
			i = pCore.private.LastAddReper[pCore.ActiveMode] + 1;
			if (i > n) i = 1;
		}
}
//DebugTool_1.Log("NextReper "+Str.ToString(i)+" "+Str.ToString(n));
return i;
]]>
		</body>
	</do>
	<do access-modifier="private" name="RemoveActiveReper" display-name="RemoveActiveReper" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[i:uint4 = 1;
n:int8 = Chart.ControlLine.Length;	// Количество реперных линий зарезервировано

while (i<n && Chart.ControlLine[i].getActive()==false) { i = i + 1;} // находим индекс активной линии
if (i < n)	// если активная линия найдена
{
		Chart.ControlLine[i].Visible = false; // делаем активную линию невидимой
//		DebugTool_1.Log("RemoveReper!");
		i = TypeConvert.ToUint4(n - 1);
		while (i>0 && Chart.ControlLine[i].Visible==false) { i = i - 1;}	// находим индекс самой старшей видимой линии
		if (i > 0)	// если видимые линии есть
		{
			Chart.ControlLine[i].setActive(true); // делаем активной самую старшую видимую линию
			pCore.private.ActiveReper[pCore.ActiveMode] = i; // запоминаем индекс активного репера
		}else{ 		 // если видимых линий нет
			pCore.private.LastAddReper[pCore.ActiveMode] = 0; // обнуляем индекс добавленного репера
			pCore.private.ActiveReper[pCore.ActiveMode] = 0; // обнуляем индекс активного репера
			pCore.ActiveMode = pCore.ActiveMode;  // Вызываем обновление кнопки на панели инструментов			
		}
}
else
{	// если активных линий не найдено
	pCore.private.LastAddReper[pCore.ActiveMode] = 0; // обнуляем индекс добавленного репера
	pCore.private.ActiveReper[pCore.ActiveMode] = 0; // обнуляем индекс активного репера
	pCore.ActiveMode = pCore.ActiveMode;  // Вызываем обновление кнопки на панели инструментов
}
Chart.Update();
]]>
		</body>
	</do>
	<do access-modifier="private" name="RemoveAllRepers" display-name="RemoveAllRepers" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[
i:int4 = 1;	
while (i < Chart.ControlLine.Length ) 
{
	Chart.ControlLine[i].Visible = false; // делаем активную линию невидимой
	i += 1;
}
//	DebugTool_1.Log("RemoveRepers!");
pCore.private.LastAddReper[pCore.ActiveMode] = 0; // обнуляем индекс добавленного репера
pCore.private.ActiveReper[pCore.ActiveMode] = 0; // обнуляем индекс активного репера
pCore.ActiveMode = pCore.ActiveMode;  // Вызываем обновление кнопки на панели инструментов
Chart.Update();
]]>
		</body>
	</do>
	<do access-modifier="private" name="SetLabelColor" display-name="SetLabelColor" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[i:int4 = 0;
while (i < Chart.ControlLine.Length)
{
	Chart.ControlLine[i].CrossPoint[index].Color = color;
	i = i + 1;
}
]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="5628bbc8-0378-4ea1-887e-1a0426eb47ca" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		<param access-modifier="private" name="color" display-name="" uuid="2a69ac43-9e31-498b-9321-fcf0c5ad440a" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="4"/>
	</do>
	<do access-modifier="private" name="SetAxisColor" display-name="SetAxisColor" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[
if (index>0 && index<Chart.Axis_Y.Length)
{
	Chart.Axis_Y[index].Color = color;
}

]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="edfbd278-6080-4838-93fb-5db0bc2990a2" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		<param access-modifier="private" name="color" display-name="" uuid="0fabc548-f6e2-4d4d-8abe-808d016702d6" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="3"/>
	</do>
	<do access-modifier="private" name="SetPause" display-name="SetPause" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("SetPause: " + String.ToString(bPause));
Chart.DataSource_1.EnableRT(!bPause);
Chart.DataSource_2.EnableRT(!bPause);
Chart.DataSource_3.EnableRT(!bPause);
Chart.DataSource_4.EnableRT(!bPause);
Chart.DataSource_5.EnableRT(!bPause);
Chart.DataSource_6.EnableRT(!bPause);
Chart.DataSource_7.EnableRT(!bPause);
Chart.DataSource_8.EnableRT(!bPause);
Chart.DataSource_9.EnableRT(!bPause);
Chart.DataSource_10.EnableRT(!bPause);
Chart.DataSource_11.EnableRT(!bPause);
Chart.DataSource_12.EnableRT(!bPause);
Chart.DataSource_13.EnableRT(!bPause);
Chart.DataSource_14.EnableRT(!bPause);
Chart.DataSource_15.EnableRT(!bPause);
Chart.DataSource_16.EnableRT(!bPause);
Chart.DataSource_17.EnableRT(!bPause);
Chart.DataSource_18.EnableRT(!bPause);
Chart.DataSource_19.EnableRT(!bPause);
Chart.DataSource_20.EnableRT(!bPause);]]>
		</body>
		<param access-modifier="private" name="bPause" display-name="" uuid="3c4efc41-4ae4-47e2-b407-81d784e02292" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="3"/>
	</do>
	<do access-modifier="private" name="AddItem" display-name="AddItem" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="javascript">
			<![CDATA[var ValueQuery = [];

ValueQuery[1] = Chart.DataSource_1.ApItemValueQuery_1;
ValueQuery[2] = Chart.DataSource_2.ApItemValueQuery_1;
ValueQuery[3] = Chart.DataSource_3.ApItemValueQuery_1;
ValueQuery[4] = Chart.DataSource_4.ApItemValueQuery_1;
ValueQuery[5] = Chart.DataSource_5.ApItemValueQuery_1;
ValueQuery[6] = Chart.DataSource_6.ApItemValueQuery_1;
ValueQuery[7] = Chart.DataSource_7.ApItemValueQuery_1;
ValueQuery[8] = Chart.DataSource_8.ApItemValueQuery_1;
ValueQuery[9] = Chart.DataSource_9.ApItemValueQuery_1;
ValueQuery[10] = Chart.DataSource_10.ApItemValueQuery_1;
ValueQuery[11] = Chart.DataSource_11.ApItemValueQuery_1;
ValueQuery[12] = Chart.DataSource_12.ApItemValueQuery_1;
ValueQuery[13] = Chart.DataSource_13.ApItemValueQuery_1;
ValueQuery[14] = Chart.DataSource_14.ApItemValueQuery_1;
ValueQuery[15] = Chart.DataSource_15.ApItemValueQuery_1;
ValueQuery[16] = Chart.DataSource_16.ApItemValueQuery_1;
ValueQuery[17] = Chart.DataSource_17.ApItemValueQuery_1;
ValueQuery[18] = Chart.DataSource_18.ApItemValueQuery_1;
ValueQuery[19] = Chart.DataSource_19.ApItemValueQuery_1;
ValueQuery[20] = Chart.DataSource_20.ApItemValueQuery_1;

Lines.Init(index);

// Наращиваем значение текущего уровня приоритета для того, что бы добавляемая линия отрисовывалсь поверх
// существующих. Максимальное значение ограничено только разрядностью переменной.
Chart.zOrderCount = Chart.zOrderCount + 1;
ValueQuery[index].Active = (type != unit.Const.tgFILE_GRAPH); 

ShowDataPoints = ShowDataPoints;		// Обновление отображения точек для строковых сигналов
Lines.Update();



]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="ef874cb7-4462-4a7e-ac14-cf35dbb81796" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		<param access-modifier="private" name="type" display-name="" uuid="a0926122-0794-4724-ac78-872cfaa1a8e2" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="4"/>
	</do>
	<do access-modifier="private" name="RemoveItem" display-name="RemoveItem" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("RemoveItem. Index="+Str.ToString(index));
Lines.SetVisible(index, false);
Lines.SetZOrder(index, 0);

DataSourceClear(index);
CancelReadAsync(index);
SetValueQueryActive(index, false);

i:int4 = 0;
while (i < Chart.Axis_Y.Length)
{
	if (index==unit.Const.ALL || index==i)
	{
		Chart.Axis_Y[i].Visible = false;
	}
	i += 1;
}
if (IsEmty()) Chart.Axis_Y[0].Visible = false;

AxisLinkUpdate(pParams.bGlobalRanges);
]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="b7baea2b-3823-4f40-8740-f98e334cab92" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
	</do>
	<do access-modifier="private" name="SetInterval" display-name="SetInterval" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="t1" display-name="" uuid="98620a53-c10e-4f98-bf92-3d233e6b04ba" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="4"/>
		<param access-modifier="private" name="t2" display-name="" uuid="2a78f062-d9f8-4e08-ad3c-25a1b0c49d13" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="4"/>
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("Set interval by script from " + DateTime.ToString(t1) + " to " + DateTime.ToString(t2));
private.omSetInterval = true;	// признак программного изменения интервала
Chart.Axis_X.SetInterval(t1, t2);	// обновляем текущий интервал]]>
		</body>
	</do>
	<do access-modifier="private" name="RemoveOutRepers" display-name="RemoveOutRepers" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[i:int4 = 0;
xmin:uint8 = Chart.GetGlobalMinX();
if (tLeftRange < xmin) xmin = tLeftRange;		// Если левая граница хранимого интервала находится в видимой части, то ограничиваем поле реперов видимой областью

while (i < Chart.ControlLine.Length)		// Удаление реперов выходящих за пределы хранимого интервала и видимого интервала 
{																																				// #18034, #20399
		if (Chart.ControlLine[i].Visible)
		{
//			DebugTool_1.Log(DateTime.ToString(Variant.ToUint8(WS.RS.Main_Charts.Chart_Operative_mode.ControlLine[i].Value,0))+","+DateTime.ToString(xmin));
			if (Variant.ToUint8(Chart.ControlLine[i].Value,0) < xmin )
			{
				if (Chart.ControlLine[i].getActive()){
					RemoveActiveReper();
				}else{
					Chart.ControlLine[i].Visible = false;
					if (pCore.private.LegendIsUse) pCore.pLegend.Update(); 
				}
			}
		}
		i = i + 1;
}//*/
]]>
		</body>
		<param access-modifier="private" name="tLeftRange" display-name="" uuid="c702a323-4854-430b-a1a2-e53c9ac2d148" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="4"/>
	</do>
	<object access-modifier="private" name="ShowMilliseconds" display-name="Показывать миллисекунды" uuid="69621bd1-4fc6-430c-b8eb-897583ded131" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<param access-modifier="private" name="initCore" display-name="initCore" uuid="a2ab9680-9201-4bfe-aafa-1b0b1c28b9ee" base-type="Trends_Core" base-type-id="f0fa79fc-d3d2-43f0-9eed-88d0f13b0fa0" base-сonst="true" base-ref="true" ver="4"/>
	<object access-modifier="private" name="SynchroColorMarker" display-name="Синхронизировать цвет графика и выноски" uuid="42f38e87-d469-4c7f-b8d9-b8ac9fc48f3b" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="4"/>
	<init target="DeltaLineWidth" ver="5" value="2"/>
	<init target="ShowEU" ver="5" value="true"/>
	<init target="ShowMarkerLabels" ver="5" value="true"/>
	<init target="ShowDataPoints" ver="5" value="false"/>
	<init target="ShowMilliseconds" ver="5" value="false"/>
	<init target="SynchroColorMarker" ver="5" value="false"/>
	<init target="ControlLineWidth" ver="5" value="1"/>
	<init target="ControlLineSelectWidth" ver="5" value="2"/>
	<init target="ControlLineColor" ver="5" value="0xff000000"/>
	<init target="ControlLineSelectColor" ver="5" value="0xffff0000"/>
	<do access-modifier="private" name="DataSourceClear" display-name="DataSourceClear" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[
if (index==0 || index==1){
	Chart.DataSource_1.Clear();
}
if (index==0 || index==2){
	Chart.DataSource_2.Clear();
}
if (index==0 || index==3){
	Chart.DataSource_3.Clear();
}
if (index==0 || index==4){
	Chart.DataSource_4.Clear();
}
if (index==0 || index==5){
	Chart.DataSource_5.Clear();
}
if (index==0 || index==6){
	Chart.DataSource_6.Clear();
}
if (index==0 || index==7){
	Chart.DataSource_7.Clear();
}
if (index==0 || index==8){
	Chart.DataSource_8.Clear();
}
if (index==0 || index==9){
	Chart.DataSource_9.Clear();
}
if (index==0 || index==10){
	Chart.DataSource_10.Clear();
}
if (index==0 || index==11){
	Chart.DataSource_11.Clear();
}
if (index==0 || index==12){
	Chart.DataSource_12.Clear();
}
if (index==0 || index==13){
	Chart.DataSource_13.Clear();
}
if (index==0 || index==14){
	Chart.DataSource_14.Clear();
}
if (index==0 || index==15){
	Chart.DataSource_15.Clear();
}
if (index==0 || index==16){
	Chart.DataSource_16.Clear();
}
if (index==0 || index==17){
	Chart.DataSource_17.Clear();
}
if (index==0 || index==18){
	Chart.DataSource_18.Clear();
}
if (index==0 || index==19){
	Chart.DataSource_19.Clear();
}
if (index==0 || index==20){
	Chart.DataSource_20.Clear();
}

]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="efa38dc1-8bdf-4704-8914-343a4357ed33" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
	</do>
	<do access-modifier="private" name="SetValueQueryActive" display-name="SetValueQueryActive" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[
if (index==0 || index==1){
	Chart.DataSource_1.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==2){
	Chart.DataSource_2.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==3){
	Chart.DataSource_3.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==4){
	Chart.DataSource_4.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==5){
	Chart.DataSource_5.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==6){
	Chart.DataSource_6.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==7){
	Chart.DataSource_7.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==8){
	Chart.DataSource_8.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==9){
	Chart.DataSource_9.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==10){
	Chart.DataSource_10.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==11){
	Chart.DataSource_11.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==12){
	Chart.DataSource_12.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==13){
	Chart.DataSource_13.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==14){
	Chart.DataSource_14.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==15){
	Chart.DataSource_15.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==16){
	Chart.DataSource_16.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==17){
	Chart.DataSource_17.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==18){
	Chart.DataSource_18.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==19){
	Chart.DataSource_19.ApItemValueQuery_1.Active = value;
}
if (index==0 || index==20){
	Chart.DataSource_20.ApItemValueQuery_1.Active = value;
}

]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="802ba602-9407-41ad-9be2-7234d624bab4" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		<param access-modifier="private" name="value" display-name="" uuid="a1c94c5a-c89b-4f18-a48f-d267fb8ac8b1" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
	</do>
	<do access-modifier="private" name="IsEmty" display-name="IsEmty" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[i:int4 = 1;
while (i <= unit.Const.MAX_LINES)
{
	if (pParams.Lines[i].Used)
		return false;
	i += 1;
}
return true;]]>
		</body>
	</do>
	<do access-modifier="private" name="CopyAxisParams" display-name="CopyAxisParams" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[// Настройки шкалы копируем на новую шкалу
if (!pCore.SynchronizeColor)
{
	Chart.Axis_Y[dest].Color = Chart.Axis_Y[src].Color;
	pParams.Axis[dest].ColorY = pParams.Axis[src].ColorY;
}
if (!pParams.bAutoRange)
{
	Chart.Axis_Y[dest].Min = Chart.Axis_Y[src].Min;
	Chart.Axis_Y[dest].Max = Chart.Axis_Y[src].Max;
}]]>
		</body>
		<param access-modifier="private" name="src" display-name="" uuid="f2c67b26-9984-4e05-a489-c5cab3720465" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		<param access-modifier="private" name="dest" display-name="" uuid="3350b75c-8d91-4a00-bb75-80804bd14cd4" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
	</do>
	<do access-modifier="private" name="SetMarkerLabelVisible" display-name="SetMarkerLabelVisible" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("SetMarkerLabelVisible.index="+Str.ToString(index)+", value="+Str.ToString(value));
j:int4 = 1;
while (j < Chart.ControlLine.Length)
{
		Chart.ControlLine[j].CrossPoint[index].Visible = value;
		j += 1;
}

Chart.Update();
]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="d5dbd76e-c027-4a3f-b549-15f96acf307f" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
		<param access-modifier="private" name="value" display-name="" uuid="8fa7360e-6051-4f30-b334-8f0bb216daa5" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="2"/>
	</do>
	<do access-modifier="private" name="ZoomY" display-name="ZoomY" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("Zoom.Y ");
i:int4 = 0;
while (i <= unit.Const.MAX_LINES)
{
	if (pParams.Lines[i].Used || i==0)
	{
		minY: variant = Chart.Axis_Y[i].Min;
		maxY: variant = Chart.Axis_Y[i].Max;
		deltaY: variant = (maxY - minY) *direct / 2 ;

		if (Variant.ToDouble(deltaY, 0) == 0){		// на случай если диапазон был равен нулю
			deltaY = (pCore.HighRange - pCore.LowRange) * direct / 2;
		}
		maxY = maxY - deltaY;
		minY = minY + deltaY;
		//DebugTool_1.Log("Zoom.Y min="+Variant.ToString(minY,"")+", max="+Variant.ToString(maxY,"")+"deltaY="+Variant.ToString(deltaY,""));
		Chart.Axis_Y[i].Scale = unit.Const.scFIXED;
		Chart.Axis_Y[i].SetInterval(minY, maxY);
	}
	i += 1;
}

Chart.Update();]]>
		</body>
		<param access-modifier="private" name="direct" display-name="" uuid="faf6ecf3-32c3-49dc-bf55-6e3c58af2332" base-type="float4" base-type-id="730a70b7-31fd-42cf-860d-ba8faa618f9d" ver="4"/>
	</do>
	<do access-modifier="private" name="ZoomX" display-name="ZoomX" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[minX: uint8 = Variant.ToUint8(Chart.Axis_X.Min, 0);
maxX: uint8 = Variant.ToUint8(Chart.Axis_X.Max, 0);
K:float = 2 / direct;
deltaX: uint8 = TypeConvert.ToUint8((maxX - minX) / Math.Abs(K));
if (K > 0)
{
	maxX = TypeConvert.ToUint8(maxX - deltaX);
	minX = TypeConvert.ToUint8(minX + deltaX);
}
else
{
	maxX = TypeConvert.ToUint8(maxX + deltaX);
	minX = TypeConvert.ToUint8(minX - deltaX);
}
Chart.Axis_X.SetInterval(minX, maxX);

Chart.Update();]]>
		</body>
		<param access-modifier="private" name="direct" display-name="" uuid="11b602b9-8279-4e73-963d-11f391134478" base-type="float4" base-type-id="730a70b7-31fd-42cf-860d-ba8faa618f9d" ver="4"/>
	</do>
	<do access-modifier="private" name="CancelReadAsync" display-name="CancelReadAsync" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[
if (index==0 || index==1){
	Chart.DataSource_1.CancelReadAsync();
}
if (index==0 || index==2){
	Chart.DataSource_2.CancelReadAsync();
}
if (index==0 || index==3){
	Chart.DataSource_3.CancelReadAsync();
}
if (index==0 || index==4){
	Chart.DataSource_4.CancelReadAsync();
}
if (index==0 || index==5){
	Chart.DataSource_5.CancelReadAsync();
}
if (index==0 || index==6){
	Chart.DataSource_6.CancelReadAsync();
}
if (index==0 || index==7){
	Chart.DataSource_7.CancelReadAsync();
}
if (index==0 || index==8){
	Chart.DataSource_8.CancelReadAsync();
}
if (index==0 || index==9){
	Chart.DataSource_9.CancelReadAsync();
}
if (index==0 || index==10){
	Chart.DataSource_10.CancelReadAsync();
}
if (index==0 || index==11){
	Chart.DataSource_11.CancelReadAsync();
}
if (index==0 || index==12){
	Chart.DataSource_12.CancelReadAsync();
}
if (index==0 || index==13){
	Chart.DataSource_13.CancelReadAsync();
}
if (index==0 || index==14){
	Chart.DataSource_14.CancelReadAsync();
}
if (index==0 || index==15){
	Chart.DataSource_15.CancelReadAsync();
}
if (index==0 || index==16){
	Chart.DataSource_16.CancelReadAsync();
}
if (index==0 || index==17){
	Chart.DataSource_17.CancelReadAsync();
}
if (index==0 || index==18){
	Chart.DataSource_18.CancelReadAsync();
}
if (index==0 || index==19){
	Chart.DataSource_19.CancelReadAsync();
}
if (index==0 || index==20){
	Chart.DataSource_20.CancelReadAsync();
}

]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="ba0481cf-1477-42d0-b066-d356ac825a36" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
	</do>
	<object access-modifier="private" name="ShowMiniTrends" display-name="Видимость минитрендов" uuid="69dea23f-4a10-4e26-967c-bc497e510629" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2"/>
	<init target="ShowMiniTrends" ver="5" value="false"/>
	<object access-modifier="private" name="Lines" display-name="Lines" uuid="f13d4102-8187-42de-9b61-6abebec0fbd7" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="3">
		<designed target="X" value="800" ver="3"/>
		<designed target="Y" value="300" ver="3"/>
		<designed target="Rotation" value="0" ver="3"/>
		<designed target="Scale" value="1" ver="3"/>
		<designed target="Visible" value="false" ver="3"/>
		<designed target="Enabled" value="true" ver="3"/>
		<designed target="Tooltip" value="" ver="3"/>
		<designed target="ZValue" value="0" ver="3"/>
		<designed target="Opacity" value="1" ver="3"/>
		<do access-modifier="private" name="Init" display-name="Init" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var Line	= [];

Line[1] = Chart.Line_1;				
Line[2] = Chart.Line_2;				
Line[3] = Chart.Line_3;				
Line[4] = Chart.Line_4;				
Line[5] = Chart.Line_5;				
Line[6] = Chart.Line_6;				
Line[7] = Chart.Line_7;				
Line[8] = Chart.Line_8;				
Line[9] = Chart.Line_9;				
Line[10] = Chart.Line_10;			
Line[11] = Chart.Line_11;			
Line[12] = Chart.Line_12;			
Line[13] = Chart.Line_13;			
Line[14] = Chart.Line_14;			
Line[15] = Chart.Line_15;			
Line[16] = Chart.Line_16;			
Line[17] = Chart.Line_17;			
Line[18] = Chart.Line_18;			
Line[19] = Chart.Line_19;			
Line[20] = Chart.Line_20;			

Line[index].Tag = pParams.Lines[index].Tag;
Line[index].Title = pParams.Lines[index].Description;
Line[index].Unit = pParams.Lines[index].Unit;

if (ChartMode == unit.Const.amOPERATIVE)
	Line[index].ColumnNumberTime = unit.Const.tmSOURCE;
else
	Line[index].ColumnNumberTime = pParams.Lines[index].nXColumn;



]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="22e2c0cc-6c23-4987-ab4f-8c68646d704b" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		</do>
		<do access-modifier="private" name="Update" display-name="Update" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var Line = [];
var DecorBad = [];
var DecorManual = [];
	
Line[1]=	Chart.Line_1;  DecorManual[1]=Chart.Line_1.Decorator_2;
Line[2]=	Chart.Line_2;  DecorManual[2]=Chart.Line_2.Decorator_2;
Line[3]=	Chart.Line_3;  DecorManual[3]=Chart.Line_3.Decorator_2;
Line[4]=	Chart.Line_4;  DecorManual[4]=Chart.Line_4.Decorator_2;
Line[5]=	Chart.Line_5;  DecorManual[5]=Chart.Line_5.Decorator_2;
Line[6]=	Chart.Line_6;  DecorManual[6]=Chart.Line_6.Decorator_2;
Line[7]=	Chart.Line_7;  DecorManual[7]=Chart.Line_7.Decorator_2;
Line[8]=	Chart.Line_8;  DecorManual[8]=Chart.Line_8.Decorator_2;
Line[9]=	Chart.Line_9;  DecorManual[9]=Chart.Line_9.Decorator_2;
Line[10]=Chart.Line_10; DecorManual[10]=Chart.Line_10.Decorator_2;
Line[11]=Chart.Line_11; DecorManual[11]=Chart.Line_11.Decorator_2;
Line[12]=Chart.Line_12; DecorManual[12]=Chart.Line_12.Decorator_2;
Line[13]=Chart.Line_13; DecorManual[13]=Chart.Line_13.Decorator_2;
Line[14]=Chart.Line_14; DecorManual[14]=Chart.Line_14.Decorator_2;
Line[15]=Chart.Line_15; DecorManual[15]=Chart.Line_15.Decorator_2;
Line[16]=Chart.Line_16; DecorManual[16]=Chart.Line_16.Decorator_2;
Line[17]=Chart.Line_17; DecorManual[17]=Chart.Line_17.Decorator_2;
Line[18]=Chart.Line_18; DecorManual[18]=Chart.Line_18.Decorator_2;
Line[19]=Chart.Line_19; DecorManual[19]=Chart.Line_19.Decorator_2;
Line[20]=Chart.Line_20; DecorManual[20]=Chart.Line_20.Decorator_2;

SetSelect(SelectedItem);
var i = 1;
while (i <= unit.Const.MAX_LINES)
{
	if (pParams.Lines[i].Used)
	{
		DecorManual[i].Color =	pParams.Lines[i].ColorManual;
		DecorManual[i].Active = pParams.Lines[i].bUseColorManual;
		
		var pointSymbolCode = pParams.Lines[i].PointSymbolCode;
		if (pointSymbolCode == 0) pointSymbolCode = 0x25CF;		 // код символа ●
		Line[i].PointSymbolCode = pointSymbolCode;
		Line[i].Visible = pParams.Lines[i].bVisible;
		Line[i].StringTagsYValue = pParams.Lines[i].StringTagYValue;
		SetMarkerLabelVisible(i, pParams.Lines[i].bShowMarkerLabels);
		SetColor(i, pParams.Lines[i].ColorMain);
		SetAxisColor(i, pParams.Axis[i].ColorY);	
	}
	i += 1;
}

Chart.Update();
]]>
			</body>
		</do>
		<do access-modifier="private" name="SetSelect" display-name="SetSelect" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="javascript">
				<![CDATA[var Line = [];
var DecorBad = [];
var DecorManual = [];
	
Line[1]=	Chart.Line_1;  DecorBad[1]=Chart.Line_1.Decorator_1;  DecorManual[1]=Chart.Line_1.Decorator_2;
Line[2]=	Chart.Line_2;  DecorBad[2]=Chart.Line_2.Decorator_1;  DecorManual[2]=Chart.Line_2.Decorator_2;
Line[3]=	Chart.Line_3;  DecorBad[3]=Chart.Line_3.Decorator_1;  DecorManual[3]=Chart.Line_3.Decorator_2;
Line[4]=	Chart.Line_4;  DecorBad[4]=Chart.Line_4.Decorator_1;  DecorManual[4]=Chart.Line_4.Decorator_2;
Line[5]=	Chart.Line_5;  DecorBad[5]=Chart.Line_5.Decorator_1;  DecorManual[5]=Chart.Line_5.Decorator_2;
Line[6]=	Chart.Line_6;  DecorBad[6]=Chart.Line_6.Decorator_1;  DecorManual[6]=Chart.Line_6.Decorator_2;
Line[7]=	Chart.Line_7;  DecorBad[7]=Chart.Line_7.Decorator_1;  DecorManual[7]=Chart.Line_7.Decorator_2;
Line[8]=	Chart.Line_8;  DecorBad[8]=Chart.Line_8.Decorator_1;  DecorManual[8]=Chart.Line_8.Decorator_2;
Line[9]=	Chart.Line_9;  DecorBad[9]=Chart.Line_9.Decorator_1;  DecorManual[9]=Chart.Line_9.Decorator_2;
Line[10]=Chart.Line_10; DecorBad[10]=Chart.Line_10.Decorator_1; DecorManual[10]=Chart.Line_10.Decorator_2;
Line[11]=Chart.Line_11; DecorBad[11]=Chart.Line_11.Decorator_1; DecorManual[11]=Chart.Line_11.Decorator_2;
Line[12]=Chart.Line_12; DecorBad[12]=Chart.Line_12.Decorator_1; DecorManual[12]=Chart.Line_12.Decorator_2;
Line[13]=Chart.Line_13; DecorBad[13]=Chart.Line_13.Decorator_1; DecorManual[13]=Chart.Line_13.Decorator_2;
Line[14]=Chart.Line_14; DecorBad[14]=Chart.Line_14.Decorator_1; DecorManual[14]=Chart.Line_14.Decorator_2;
Line[15]=Chart.Line_15; DecorBad[15]=Chart.Line_15.Decorator_1; DecorManual[15]=Chart.Line_15.Decorator_2;
Line[16]=Chart.Line_16; DecorBad[16]=Chart.Line_16.Decorator_1; DecorManual[16]=Chart.Line_16.Decorator_2;
Line[17]=Chart.Line_17; DecorBad[17]=Chart.Line_17.Decorator_1; DecorManual[17]=Chart.Line_17.Decorator_2;
Line[18]=Chart.Line_18; DecorBad[18]=Chart.Line_18.Decorator_1; DecorManual[18]=Chart.Line_18.Decorator_2;
Line[19]=Chart.Line_19; DecorBad[19]=Chart.Line_19.Decorator_1; DecorManual[19]=Chart.Line_19.Decorator_2;
Line[20]=Chart.Line_20; DecorBad[20]=Chart.Line_20.Decorator_1; DecorManual[20]=Chart.Line_20.Decorator_2;

var i = 1;
while (i <= unit.Const.MAX_LINES)
{
	if (pParams.Lines[i].Used)
	{
		var lineWidthGood = pParams.Lines[i].WidthGood;	
		var lineWidthBad = pParams.Lines[i].WidthBad;	
		var lineStyleGood = pParams.Lines[i].StyleGood;
		var lineStyleBad = pParams.Lines[i].StyleBad;
		if (index == i)		// Для выделенного графика
		{																																					
			// Увеличение при выделении
			lineWidthGood += DeltaLineWidth;
			lineWidthBad += DeltaLineWidth;
	
			if (i != SelectedItem)	Chart.zOrderCount += 1;
			SelectedItem = i;
			Line[i].zOrder = Chart.zOrderCount;	

		// Привязка выделенной линии к реперам
			var lineId = Line[i].ID;		// определяем id выделенной линии
			var j = 0;
			while	(j < Chart.ControlLine.Length)
			{
				Chart.ControlLine[j].SetLine(lineId);
				j += 1;
			}
		}
		// при нулевом стиле линии точки не отображаются, поэтому
		// при выбранном нулевом стиле, стиль устанавливается в 1, а толщина линии обнуляется
		Line[i].LineWidth = 			(lineStyleGood!=unit.Const.slWITHOUT_LINE) ? lineWidthGood : 0;

		Line[i].LineBrushStyle =	(lineStyleGood!=unit.Const.slWITHOUT_LINE) ? lineStyleGood : 1;
		DecorBad[i].LineWidth =				(lineStyleBad !=unit.Const.slWITHOUT_LINE) ? lineWidthBad : 0;
		DecorBad[i].LineBrushStyle =	(lineStyleBad !=unit.Const.slWITHOUT_LINE) ? lineStyleBad : 1;
		DecorManual[i].LineWidth = 			Line[i].LineWidth;
		DecorManual[i].LineBrushStyle =	Line[i].LineBrushStyle;
		Line[i].PointSize = lineWidthGood <= 2 ? 15 : lineWidthGood * 5 + 5;
		DecorBad[i].PointSize = Line[i].PointSize;
		DecorManual[i].PointSize = Line[i].PointSize;
	}
	i += 1;
}

Chart.Update();
]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="b0f11672-ff50-473f-b7aa-13079a97abf5" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
		<do access-modifier="private" name="SetVisible" display-name="SetVisible" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[//DebugTool_1.Log(Str.ToString(ChartMode)+" SetVisible["+Str.ToString(index)+"]="+Str.ToString(value));
if (index==0 || index==1){
	Chart.Line_1.Visible = value;
}
if (index==0 || index==2){
	Chart.Line_2.Visible = value;
}
if (index==0 || index==3){
	Chart.Line_3.Visible = value;
}
if (index==0 || index==4){
	Chart.Line_4.Visible = value;
}
if (index==0 || index==5){
	Chart.Line_5.Visible = value;
}
if (index==0 || index==6){
	Chart.Line_6.Visible = value;
}
if (index==0 || index==7){
	Chart.Line_7.Visible = value;
}
if (index==0 || index==8){
	Chart.Line_8.Visible = value;
}
if (index==0 || index==9){
	Chart.Line_9.Visible = value;
}
if (index==0 || index==10){
	Chart.Line_10.Visible = value;
}
if (index==0 || index==11){
	Chart.Line_11.Visible = value;
}
if (index==0 || index==12){
	Chart.Line_12.Visible = value;
}
if (index==0 || index==13){
	Chart.Line_13.Visible = value;
}
if (index==0 || index==14){
	Chart.Line_14.Visible = value;
}
if (index==0 || index==15){
	Chart.Line_15.Visible = value;
}
if (index==0 || index==16){
	Chart.Line_16.Visible = value;
}
if (index==0 || index==17){
	Chart.Line_17.Visible = value;
}
if (index==0 || index==18){
	Chart.Line_18.Visible = value;
}
if (index==0 || index==19){
	Chart.Line_19.Visible = value;
}
if (index==0 || index==20){
	Chart.Line_20.Visible = value;
}

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="63b72502-c230-4eae-bce6-eda6d0bce304" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="value" display-name="" uuid="2ccc6f5e-3a6e-4700-9f39-a23e15ee3bad" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
		</do>
		<do access-modifier="private" name="GetVisible" display-name="GetVisible" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
			<body kind="om">
				<![CDATA[
if (index == 1){
	return Chart.Line_1.Visible;
}
if (index == 2){
	return Chart.Line_2.Visible;
}
if (index == 3){
	return Chart.Line_3.Visible;
}
if (index == 4){
	return Chart.Line_4.Visible;
}
if (index == 5){
	return Chart.Line_5.Visible;
}
if (index == 6){
	return Chart.Line_6.Visible;
}
if (index == 7){
	return Chart.Line_7.Visible;
}
if (index == 8){
	return Chart.Line_8.Visible;
}
if (index == 9){
	return Chart.Line_9.Visible;
}
if (index == 10){
	return Chart.Line_10.Visible;
}
if (index == 11){
	return Chart.Line_11.Visible;
}
if (index == 12){
	return Chart.Line_12.Visible;
}
if (index == 13){
	return Chart.Line_13.Visible;
}
if (index == 14){
	return Chart.Line_14.Visible;
}
if (index == 15){
	return Chart.Line_15.Visible;
}
if (index == 16){
	return Chart.Line_16.Visible;
}
if (index == 17){
	return Chart.Line_17.Visible;
}
if (index == 18){
	return Chart.Line_18.Visible;
}
if (index == 19){
	return Chart.Line_19.Visible;
}
if (index == 20){
	return Chart.Line_20.Visible;
}


return false;]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="bc4cb5a1-a682-496f-ad42-d2749476c3b0" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		</do>
		<do access-modifier="private" name="GetSize" display-name="GetSize" ver="5" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
			<body kind="om">
				<![CDATA[	if (index == 1) return	Chart.DataSource_1.Size;
	else if (index == 2) return	Chart.DataSource_2.Size;
	else if (index == 3) return	Chart.DataSource_3.Size;
	else if (index == 4) return	Chart.DataSource_4.Size;
	else if (index == 5) return	Chart.DataSource_5.Size;
	else if (index == 6) return	Chart.DataSource_6.Size;
	else if (index == 7) return	Chart.DataSource_7.Size;
	else if (index == 8) return	Chart.DataSource_8.Size;
	else if (index == 9) return	Chart.DataSource_9.Size;
	else if (index ==10) return	Chart.DataSource_10.Size;
	else if (index ==11) return	Chart.DataSource_11.Size;
	else if (index ==12) return	Chart.DataSource_12.Size;
	else if (index ==13) return	Chart.DataSource_13.Size;
	else if (index ==14) return	Chart.DataSource_14.Size;
	else if (index ==15) return	Chart.DataSource_15.Size;
	else if (index ==16) return	Chart.DataSource_16.Size;
	else if (index ==17) return	Chart.DataSource_17.Size;
	else if (index ==18) return	Chart.DataSource_18.Size;
	else if (index ==19) return	Chart.DataSource_19.Size;
	else if (index ==20) return	Chart.DataSource_20.Size;
return 0;]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="aa86a9dd-6f42-4d6b-a5b6-93b79ba38fe8" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		</do>
		<do access-modifier="private" name="SetColor" display-name="SetColor" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[bManualSynchro:bool = !pParams.Lines[index].bUseColorManual;

if (index==1){
	Chart.Line_1.Color = color;
	Chart.Line_1.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_1.Decorator_2.Color = color;
}
else if (index==2){
	Chart.Line_2.Color = color;
	Chart.Line_2.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_2.Decorator_2.Color = color;
}
else if (index==3){
	Chart.Line_3.Color = color;
	Chart.Line_3.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_3.Decorator_2.Color = color;
}
else if (index==4){
	Chart.Line_4.Color = color;
	Chart.Line_4.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_4.Decorator_2.Color = color;
}
else if (index==5){
	Chart.Line_5.Color = color;
	Chart.Line_5.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_5.Decorator_2.Color = color;
}
else if (index==6){
	Chart.Line_6.Color = color;
	Chart.Line_6.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_6.Decorator_2.Color = color;
}
else if (index==7){
	Chart.Line_7.Color = color;
	Chart.Line_7.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_7.Decorator_2.Color = color;
}
else if (index==8){
	Chart.Line_8.Color = color;
	Chart.Line_8.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_8.Decorator_2.Color = color;
}
else if (index==9){
	Chart.Line_9.Color = color;
	Chart.Line_9.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_9.Decorator_2.Color = color;
}
else if (index==10){
	Chart.Line_10.Color = color;
	Chart.Line_10.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_10.Decorator_2.Color = color;
}
else if (index==11){
	Chart.Line_11.Color = color;
	Chart.Line_11.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_11.Decorator_2.Color = color;
}
else if (index==12){
	Chart.Line_12.Color = color;
	Chart.Line_12.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_12.Decorator_2.Color = color;
}
else if (index==13){
	Chart.Line_13.Color = color;
	Chart.Line_13.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_13.Decorator_2.Color = color;
}
else if (index==14){
	Chart.Line_14.Color = color;
	Chart.Line_14.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_14.Decorator_2.Color = color;
}
else if (index==15){
	Chart.Line_15.Color = color;
	Chart.Line_15.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_15.Decorator_2.Color = color;
}
else if (index==16){
	Chart.Line_16.Color = color;
	Chart.Line_16.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_16.Decorator_2.Color = color;
}
else if (index==17){
	Chart.Line_17.Color = color;
	Chart.Line_17.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_17.Decorator_2.Color = color;
}
else if (index==18){
	Chart.Line_18.Color = color;
	Chart.Line_18.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_18.Decorator_2.Color = color;
}
else if (index==19){
	Chart.Line_19.Color = color;
	Chart.Line_19.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_19.Decorator_2.Color = color;
}
else if (index==20){
	Chart.Line_20.Color = color;
	Chart.Line_20.Decorator_1.Color = color;
	if (bManualSynchro) Chart.Line_20.Decorator_2.Color = color;
}

if (pParams.Lines[index].bSyncroColorMarkerLabels)
	SetLabelColor(index, color);
else
	SetLabelColor(index, unit.Const.clBLACK);]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="8e1abd41-f6f5-482c-80fe-47b3c0eb18f3" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="color" display-name="" uuid="73119b8a-fdc8-4836-82a8-db231eed7580" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="4"/>
		</do>
		<do access-modifier="private" name="SetColorManual" display-name="SetColorManual" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[
if (index==1){
	Chart.Line_1.Decorator_2.Color = color;
}
else if (index==2){
	Chart.Line_2.Decorator_2.Color = color;
}
else if (index==3){
	Chart.Line_3.Decorator_2.Color = color;
}
else if (index==4){
	Chart.Line_4.Decorator_2.Color = color;
}
else if (index==5){
	Chart.Line_5.Decorator_2.Color = color;
}
else if (index==6){
	Chart.Line_6.Decorator_2.Color = color;
}
else if (index==7){
	Chart.Line_7.Decorator_2.Color = color;
}
else if (index==8){
	Chart.Line_8.Decorator_2.Color = color;
}
else if (index==9){
	Chart.Line_9.Decorator_2.Color = color;
}
else if (index==10){
	Chart.Line_10.Decorator_2.Color = color;
}
else if (index==11){
	Chart.Line_11.Decorator_2.Color = color;
}
else if (index==12){
	Chart.Line_12.Decorator_2.Color = color;
}
else if (index==13){
	Chart.Line_13.Decorator_2.Color = color;
}
else if (index==14){
	Chart.Line_14.Decorator_2.Color = color;
}
else if (index==15){
	Chart.Line_15.Decorator_2.Color = color;
}
else if (index==16){
	Chart.Line_16.Decorator_2.Color = color;
}
else if (index==17){
	Chart.Line_17.Decorator_2.Color = color;
}
else if (index==18){
	Chart.Line_18.Decorator_2.Color = color;
}
else if (index==19){
	Chart.Line_19.Decorator_2.Color = color;
}
else if (index==20){
	Chart.Line_20.Decorator_2.Color = color;
}

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="abf6fc67-b521-4fe6-9f6b-7dfbb625b4fb" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="color" display-name="" uuid="638f139b-7fb2-4329-b367-8976ff773c00" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="4"/>
		</do>
		<do access-modifier="private" name="SetDescription" display-name="SetDescription" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (index==1)
	Chart.Line_1.Title = description;
else if (index==2)
	Chart.Line_2.Title = description;
else if (index==3)
	Chart.Line_3.Title = description;
else if (index==4)
	Chart.Line_4.Title = description;
else if (index==5)
	Chart.Line_5.Title = description;
else if (index==6)
	Chart.Line_6.Title = description;
else if (index==7)
	Chart.Line_7.Title = description;
else if (index==8)
	Chart.Line_8.Title = description;
else if (index==9)
	Chart.Line_9.Title = description;
else if (index==10)
	Chart.Line_10.Title = description;
else if (index==11)
	Chart.Line_11.Title = description;
else if (index==12)
	Chart.Line_12.Title = description;
else if (index==13)
	Chart.Line_13.Title = description;
else if (index==14)
	Chart.Line_14.Title = description;
else if (index==15)
	Chart.Line_15.Title = description;
else if (index==16)
	Chart.Line_16.Title = description;
else if (index==17)
	Chart.Line_17.Title = description;
else if (index==18)
	Chart.Line_18.Title = description;
else if (index==19)
	Chart.Line_19.Title = description;
else if (index==20)
	Chart.Line_20.Title = description;

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="e33c5096-5031-47a8-94e3-5872012fc9b8" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="description" display-name="" uuid="2a5f5478-55ae-4601-9702-26fc27f72181" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</do>
		<do access-modifier="private" name="SetUnits" display-name="SetUnits" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[
if (index==1){
	Chart.Line_1.Unit = EU;
}
if (index==2){
	Chart.Line_2.Unit = EU;
}
if (index==3){
	Chart.Line_3.Unit = EU;
}
if (index==4){
	Chart.Line_4.Unit = EU;
}
if (index==5){
	Chart.Line_5.Unit = EU;
}
if (index==6){
	Chart.Line_6.Unit = EU;
}
if (index==7){
	Chart.Line_7.Unit = EU;
}
if (index==8){
	Chart.Line_8.Unit = EU;
}
if (index==9){
	Chart.Line_9.Unit = EU;
}
if (index==10){
	Chart.Line_10.Unit = EU;
}
if (index==11){
	Chart.Line_11.Unit = EU;
}
if (index==12){
	Chart.Line_12.Unit = EU;
}
if (index==13){
	Chart.Line_13.Unit = EU;
}
if (index==14){
	Chart.Line_14.Unit = EU;
}
if (index==15){
	Chart.Line_15.Unit = EU;
}
if (index==16){
	Chart.Line_16.Unit = EU;
}
if (index==17){
	Chart.Line_17.Unit = EU;
}
if (index==18){
	Chart.Line_18.Unit = EU;
}
if (index==19){
	Chart.Line_19.Unit = EU;
}
if (index==20){
	Chart.Line_20.Unit = EU;
}

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="98f83a45-00b9-4d93-83ba-816a53971b93" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="EU" display-name="" uuid="e9ebd47c-8371-4c7c-9dd5-c7ef83819208" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</do>
		<do access-modifier="private" name="SetStringTagYValue" display-name="SetStringTagYValue" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[vNewValue:variant = Variant.FromDouble(value);

if (index==0 || index==1){
	Chart.Line_1.StringTagsYValue = vNewValue;
}
if (index==0 || index==2){
	Chart.Line_2.StringTagsYValue = vNewValue;
}
if (index==0 || index==3){
	Chart.Line_3.StringTagsYValue = vNewValue;
}
if (index==0 || index==4){
	Chart.Line_4.StringTagsYValue = vNewValue;
}
if (index==0 || index==5){
	Chart.Line_5.StringTagsYValue = vNewValue;
}
if (index==0 || index==6){
	Chart.Line_6.StringTagsYValue = vNewValue;
}
if (index==0 || index==7){
	Chart.Line_7.StringTagsYValue = vNewValue;
}
if (index==0 || index==8){
	Chart.Line_8.StringTagsYValue = vNewValue;
}
if (index==0 || index==9){
	Chart.Line_9.StringTagsYValue = vNewValue;
}
if (index==0 || index==10){
	Chart.Line_10.StringTagsYValue = vNewValue;
}
if (index==0 || index==11){
	Chart.Line_11.StringTagsYValue = vNewValue;
}
if (index==0 || index==12){
	Chart.Line_12.StringTagsYValue = vNewValue;
}
if (index==0 || index==13){
	Chart.Line_13.StringTagsYValue = vNewValue;
}
if (index==0 || index==14){
	Chart.Line_14.StringTagsYValue = vNewValue;
}
if (index==0 || index==15){
	Chart.Line_15.StringTagsYValue = vNewValue;
}
if (index==0 || index==16){
	Chart.Line_16.StringTagsYValue = vNewValue;
}
if (index==0 || index==17){
	Chart.Line_17.StringTagsYValue = vNewValue;
}
if (index==0 || index==18){
	Chart.Line_18.StringTagsYValue = vNewValue;
}
if (index==0 || index==19){
	Chart.Line_19.StringTagsYValue = vNewValue;
}
if (index==0 || index==20){
	Chart.Line_20.StringTagsYValue = vNewValue;
}

Chart.Update();]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="c0571fda-d011-4e61-bfd2-5ddb26cdfc75" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="value" display-name="" uuid="f915d579-a8f7-4ac4-ab90-e0014a2f7774" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="4"/>
		</do>
		<do access-modifier="private" name="SetZOrder" display-name="SetZOrder" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[
if (index==0 || index==1){
	Chart.Line_1.zOrder = value;
}
if (index==0 || index==2){
	Chart.Line_2.zOrder = value;
}
if (index==0 || index==3){
	Chart.Line_3.zOrder = value;
}
if (index==0 || index==4){
	Chart.Line_4.zOrder = value;
}
if (index==0 || index==5){
	Chart.Line_5.zOrder = value;
}
if (index==0 || index==6){
	Chart.Line_6.zOrder = value;
}
if (index==0 || index==7){
	Chart.Line_7.zOrder = value;
}
if (index==0 || index==8){
	Chart.Line_8.zOrder = value;
}
if (index==0 || index==9){
	Chart.Line_9.zOrder = value;
}
if (index==0 || index==10){
	Chart.Line_10.zOrder = value;
}
if (index==0 || index==11){
	Chart.Line_11.zOrder = value;
}
if (index==0 || index==12){
	Chart.Line_12.zOrder = value;
}
if (index==0 || index==13){
	Chart.Line_13.zOrder = value;
}
if (index==0 || index==14){
	Chart.Line_14.zOrder = value;
}
if (index==0 || index==15){
	Chart.Line_15.zOrder = value;
}
if (index==0 || index==16){
	Chart.Line_16.zOrder = value;
}
if (index==0 || index==17){
	Chart.Line_17.zOrder = value;
}
if (index==0 || index==18){
	Chart.Line_18.zOrder = value;
}
if (index==0 || index==19){
	Chart.Line_19.zOrder = value;
}
if (index==0 || index==20){
	Chart.Line_20.zOrder = value;
}

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="2f4b68a4-2b00-47bb-9792-b6a5da49253c" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="value" display-name="" uuid="168778fe-099a-4939-9b24-36ae2469f671" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="4"/>
		</do>
		<do access-modifier="private" name="GetMinY" display-name="GetMinY" ver="5" type="float8" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409">
			<body kind="om">
				<![CDATA[	if (index == 1) return Variant.ToDouble(Chart.Line_1.GetMinY(),-1);
	if (index == 2)	return Variant.ToDouble(Chart.Line_2.GetMinY(),0);
	if (index == 3)	return Variant.ToDouble(Chart.Line_3.GetMinY(),0);
	if (index == 4)	return Variant.ToDouble(Chart.Line_4.GetMinY(),0);
	if (index == 5)	return Variant.ToDouble(Chart.Line_5.GetMinY(),0);
	if (index == 6)	return Variant.ToDouble(Chart.Line_6.GetMinY(),0);
	if (index == 7)	return Variant.ToDouble(Chart.Line_7.GetMinY(),0);
	if (index == 8)	return Variant.ToDouble(Chart.Line_8.GetMinY(),0);
	if (index == 9)	return Variant.ToDouble(Chart.Line_9.GetMinY(),0);
	if (index == 10) return	Variant.ToDouble(Chart.Line_10.GetMinY(),0);
	if (index == 11) return	Variant.ToDouble(Chart.Line_11.GetMinY(),0);
	if (index == 12) return	Variant.ToDouble(Chart.Line_12.GetMinY(),0);
	if (index == 13) return	Variant.ToDouble(Chart.Line_13.GetMinY(),0);
	if (index == 14) return	Variant.ToDouble(Chart.Line_14.GetMinY(),0);
	if (index == 15) return	Variant.ToDouble(Chart.Line_15.GetMinY(),0);
	if (index == 16) return	Variant.ToDouble(Chart.Line_16.GetMinY(),0);
	if (index == 17) return	Variant.ToDouble(Chart.Line_17.GetMinY(),0);
	if (index == 18) return	Variant.ToDouble(Chart.Line_18.GetMinY(),0);
	if (index == 19) return	Variant.ToDouble(Chart.Line_19.GetMinY(),0);
	if (index == 20) return	Variant.ToDouble(Chart.Line_20.GetMinY(),0);
return 0;]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="1c3e3268-0b78-4da3-a738-ebbf2da6fe2d" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		</do>
		<do access-modifier="private" name="GetMaxY" display-name="GetMaxY" ver="5" type="float8" type-id="7ad62ecf-96dd-4751-9b96-e77954b44409">
			<body kind="om">
				<![CDATA[	if (index == 1) return Variant.ToDouble(Chart.Line_1.GetMaxY(), -1);
	if (index == 2)	return Variant.ToDouble(Chart.Line_2.GetMaxY(), 0);
	if (index == 3)	return Variant.ToDouble(Chart.Line_3.GetMaxY(), 0);
	if (index == 4)	return Variant.ToDouble(Chart.Line_4.GetMaxY(), 0);
	if (index == 5)	return Variant.ToDouble(Chart.Line_5.GetMaxY(), 0);
	if (index == 6)	return Variant.ToDouble(Chart.Line_6.GetMaxY(), 0);
	if (index == 7)	return Variant.ToDouble(Chart.Line_7.GetMaxY(), 0);
	if (index == 8)	return Variant.ToDouble(Chart.Line_8.GetMaxY(), 0);
	if (index == 9)	return Variant.ToDouble(Chart.Line_9.GetMaxY(), 0);
	if (index == 10) return	Variant.ToDouble(Chart.Line_10.GetMaxY(),0);
	if (index == 11) return	Variant.ToDouble(Chart.Line_11.GetMaxY(),0);
	if (index == 12) return	Variant.ToDouble(Chart.Line_12.GetMaxY(),0);
	if (index == 13) return	Variant.ToDouble(Chart.Line_13.GetMaxY(),0);
	if (index == 14) return	Variant.ToDouble(Chart.Line_14.GetMaxY(),0);
	if (index == 15) return	Variant.ToDouble(Chart.Line_15.GetMaxY(),0);
	if (index == 16) return	Variant.ToDouble(Chart.Line_16.GetMaxY(),0);
	if (index == 17) return	Variant.ToDouble(Chart.Line_17.GetMaxY(),0);
	if (index == 18) return	Variant.ToDouble(Chart.Line_18.GetMaxY(),0);
	if (index == 19) return	Variant.ToDouble(Chart.Line_19.GetMaxY(),0);
	if (index == 20) return	Variant.ToDouble(Chart.Line_20.GetMaxY(),0);
return 0;]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="dda4ecd1-d213-41f2-b273-5c5a5292f705" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
		</do>
		<do access-modifier="private" name="Save" display-name="Save" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[if (index==1)		Chart.DataSource_1.Save(fileName, "JSON");		
else if (index==2)	Chart.DataSource_2.Save(fileName, "JSON");		
else if (index==3)	Chart.DataSource_3.Save(fileName, "JSON");		
else if (index==4)	Chart.DataSource_4.Save(fileName, "JSON");		
else if (index==5)	Chart.DataSource_5.Save(fileName, "JSON");		
else if (index==6)	Chart.DataSource_6.Save(fileName, "JSON");		
else if (index==7)	Chart.DataSource_7.Save(fileName, "JSON");		
else if (index==8)	Chart.DataSource_8.Save(fileName, "JSON");		
else if (index==9)	Chart.DataSource_9.Save(fileName, "JSON");		
else if (index==10)	Chart.DataSource_10.Save(fileName, "JSON");		
else if (index==11)	Chart.DataSource_11.Save(fileName, "JSON");		
else if (index==12)	Chart.DataSource_12.Save(fileName, "JSON");		
else if (index==13)	Chart.DataSource_13.Save(fileName, "JSON");		
else if (index==14)	Chart.DataSource_14.Save(fileName, "JSON");		
else if (index==15)	Chart.DataSource_15.Save(fileName, "JSON");		
else if (index==16)	Chart.DataSource_16.Save(fileName, "JSON");		
else if (index==17)	Chart.DataSource_17.Save(fileName, "JSON");		
else if (index==18)	Chart.DataSource_18.Save(fileName, "JSON");		
else if (index==19)	Chart.DataSource_19.Save(fileName, "JSON");		
else if (index==20)	Chart.DataSource_20.Save(fileName, "JSON");		

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="77725d93-7deb-4c40-8622-80d5696e3b04" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="fileName" display-name="" uuid="c31790d4-800a-42e6-b5db-e66665b6667c" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</do>
		<do access-modifier="private" name="SetAxis" display-name="SetAxis" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[
id:int4 = TypeConvert.ToInt4(Chart.Axis_Y[iAxis].GetID());

if (index==1){
	Chart.Line_1.SetAxisById(id);
}
if (index==2){
	Chart.Line_2.SetAxisById(id);
}
if (index==3){
	Chart.Line_3.SetAxisById(id);
}
if (index==4){
	Chart.Line_4.SetAxisById(id);
}
if (index==5){
	Chart.Line_5.SetAxisById(id);
}
if (index==6){
	Chart.Line_6.SetAxisById(id);
}
if (index==7){
	Chart.Line_7.SetAxisById(id);
}
if (index==8){
	Chart.Line_8.SetAxisById(id);
}
if (index==9){
	Chart.Line_9.SetAxisById(id);
}
if (index==10){
	Chart.Line_10.SetAxisById(id);
}
if (index==11){
	Chart.Line_11.SetAxisById(id);
}
if (index==12){
	Chart.Line_12.SetAxisById(id);
}
if (index==13){
	Chart.Line_13.SetAxisById(id);
}
if (index==14){
	Chart.Line_14.SetAxisById(id);
}
if (index==15){
	Chart.Line_15.SetAxisById(id);
}
if (index==16){
	Chart.Line_16.SetAxisById(id);
}
if (index==17){
	Chart.Line_17.SetAxisById(id);
}
if (index==18){
	Chart.Line_18.SetAxisById(id);
}
if (index==19){
	Chart.Line_19.SetAxisById(id);
}
if (index==20){
	Chart.Line_20.SetAxisById(id);
}

]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="9b600a73-f895-4864-ae07-d86dbc80d19c" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="iAxis" display-name="" uuid="697e54fb-b028-43b3-8222-d83f24be4e02" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		</do>
		<do access-modifier="private" name="Set_Interpolation" display-name="Set_Interpolation" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[newType:uint4 = TypeConvert.ToUint4((value)?(0):(1));

if (index==0 || index==1){
	Chart.Line_1.drawingType = newType;
}
if (index==0 || index==2){
	Chart.Line_2.drawingType = newType;
}
if (index==0 || index==3){
	Chart.Line_3.drawingType = newType;
}
if (index==0 || index==4){
	Chart.Line_4.drawingType = newType;
}
if (index==0 || index==5){
	Chart.Line_5.drawingType = newType;
}
if (index==0 || index==6){
	Chart.Line_6.drawingType = newType;
}
if (index==0 || index==7){
	Chart.Line_7.drawingType = newType;
}
if (index==0 || index==8){
	Chart.Line_8.drawingType = newType;
}
if (index==0 || index==9){
	Chart.Line_9.drawingType = newType;
}
if (index==0 || index==10){
	Chart.Line_10.drawingType = newType;
}
if (index==0 || index==11){
	Chart.Line_11.drawingType = newType;
}
if (index==0 || index==12){
	Chart.Line_12.drawingType = newType;
}
if (index==0 || index==13){
	Chart.Line_13.drawingType = newType;
}
if (index==0 || index==14){
	Chart.Line_14.drawingType = newType;
}
if (index==0 || index==15){
	Chart.Line_15.drawingType = newType;
}
if (index==0 || index==16){
	Chart.Line_16.drawingType = newType;
}
if (index==0 || index==17){
	Chart.Line_17.drawingType = newType;
}
if (index==0 || index==18){
	Chart.Line_18.drawingType = newType;
}
if (index==0 || index==19){
	Chart.Line_19.drawingType = newType;
}
if (index==0 || index==20){
	Chart.Line_20.drawingType = newType;
}

Chart.Update();]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="170cb5c5-f9f1-4dd2-8583-ca14be0a2a48" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="value" display-name="" uuid="8a508cfa-48ac-4f02-8682-c30a8a17bda7" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="4"/>
		</do>
		<do access-modifier="private" name="Load" display-name="Load" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[//DebugTool_1.Log("LinesLoad "+fileName);
if (index == 1){
	pCore.private.Lines.HistID[index] = Chart.Line_1.ID;	
	Chart.DataSource_1.Load(fileName, "json");
}
else if (index == 2){
	pCore.private.Lines.HistID[index] = Chart.Line_2.ID;	
	Chart.DataSource_2.Load(fileName, "JSON");		
}
else if (index == 3){
	pCore.private.Lines.HistID[index] = Chart.Line_3.ID;	
	Chart.DataSource_3.Load(fileName, "JSON");		
}
else if (index == 4){
	pCore.private.Lines.HistID[index] = Chart.Line_4.ID;	
	Chart.DataSource_4.Load(fileName, "JSON");		
}
else if (index == 5){
	pCore.private.Lines.HistID[index] = Chart.Line_5.ID;	
	Chart.DataSource_5.Load(fileName, "JSON");		
}
else if (index == 6){
	pCore.private.Lines.HistID[index] = Chart.Line_6.ID;	
	Chart.DataSource_6.Load(fileName, "JSON");		
}
else if (index == 7){
	pCore.private.Lines.HistID[index] = Chart.Line_7.ID;	
	Chart.DataSource_7.Load(fileName, "JSON");		
}
else if (index == 8){
	pCore.private.Lines.HistID[index] = Chart.Line_8.ID;	
	Chart.DataSource_8.Load(fileName, "JSON");		
}
else if (index == 9){
	pCore.private.Lines.HistID[index] = Chart.Line_9.ID;	
	Chart.DataSource_9.Load(fileName, "JSON");		
}
else if (index == 10){
	pCore.private.Lines.HistID[index] = Chart.Line_10.ID;	
	Chart.DataSource_10.Load(fileName, "JSON");		
}
else if (index == 11){
	pCore.private.Lines.HistID[index] = Chart.Line_11.ID;	
	Chart.DataSource_11.Load(fileName, "JSON");		
}
else if (index == 12){
	pCore.private.Lines.HistID[index] = Chart.Line_12.ID;	
	Chart.DataSource_12.Load(fileName, "JSON");		
}
else if (index == 13){
	pCore.private.Lines.HistID[index] = Chart.Line_13.ID;	
	Chart.DataSource_13.Load(fileName, "JSON");		
}
else if (index == 14){
	pCore.private.Lines.HistID[index] = Chart.Line_14.ID;	
	Chart.DataSource_14.Load(fileName, "JSON");		
}
else if (index == 15){
	pCore.private.Lines.HistID[index] = Chart.Line_15.ID;	
	Chart.DataSource_15.Load(fileName, "JSON");		
}
else if (index == 16){
	pCore.private.Lines.HistID[index] = Chart.Line_16.ID;	
	Chart.DataSource_16.Load(fileName, "JSON");		
}
else if (index == 17){
	pCore.private.Lines.HistID[index] = Chart.Line_17.ID;	
	Chart.DataSource_17.Load(fileName, "JSON");		
}
else if (index == 18){
	pCore.private.Lines.HistID[index] = Chart.Line_18.ID;	
	Chart.DataSource_18.Load(fileName, "JSON");		
}
else if (index == 19){
	pCore.private.Lines.HistID[index] = Chart.Line_19.ID;	
	Chart.DataSource_19.Load(fileName, "JSON");		
}
else if (index == 20){
	pCore.private.Lines.HistID[index] = Chart.Line_20.ID;	
	Chart.DataSource_20.Load(fileName, "JSON");		
}
Chart.LoadFilesCount += 1;


]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="e6a979eb-e599-46ab-aa4e-5ebc17f13105" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
			<param access-modifier="private" name="fileName" display-name="" uuid="35cc4815-a33b-4673-80b1-25ae29b4b75d" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
		</do>
		<do access-modifier="private" name="GetID" display-name="GetID" ver="5" type="int4" type-id="74222947-f188-4195-8e0e-e33bd9827255">
			<body kind="om">
				<![CDATA[
if (index == 1){
	return Chart.Line_1.ID;
}
else if (index == 2){
	return Chart.Line_2.ID;
}
else if (index == 3){
	return Chart.Line_3.ID;
}
else if (index == 4){
	return Chart.Line_4.ID;
}
else if (index == 5){
	return Chart.Line_5.ID;
}
else if (index == 6){
	return Chart.Line_6.ID;
}
else if (index == 7){
	return Chart.Line_7.ID;
}
else if (index == 8){
	return Chart.Line_8.ID;
}
else if (index == 9){
	return Chart.Line_9.ID;
}
else if (index == 10){
	return Chart.Line_10.ID;
}
else if (index == 11){
	return Chart.Line_11.ID;
}
else if (index == 12){
	return Chart.Line_12.ID;
}
else if (index == 13){
	return Chart.Line_13.ID;
}
else if (index == 14){
	return Chart.Line_14.ID;
}
else if (index == 15){
	return Chart.Line_15.ID;
}
else if (index == 16){
	return Chart.Line_16.ID;
}
else if (index == 17){
	return Chart.Line_17.ID;
}
else if (index == 18){
	return Chart.Line_18.ID;
}
else if (index == 19){
	return Chart.Line_19.ID;
}
else if (index == 20){
	return Chart.Line_20.ID;
}


return 0;]]>
			</body>
			<param access-modifier="private" name="index" display-name="" uuid="39e855cc-e58a-4eb1-bbf9-68ff62ab1505" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
		</do>
		<do access-modifier="private" name="BeginReadRT" display-name="BeginReadRT" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<param access-modifier="private" name="index" display-name="" uuid="b574c3a1-1ce9-408d-bd64-c754e32f166b" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="5"/>
			<body kind="om">
				<![CDATA[if (!pParams.Lines[index].Used || !pCore.private.NowParams.bMainTime[index]) return;
//DebugTool_1.Log("BeginReadRT: " + String.ToString(index));

Chart.DataSource_1.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;  // Используется как эталон текущего значения
if (index==1)
{
	Chart.DataSource_1.EnableRT(true);
	Chart.DataSource_1.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_1.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;  
	Chart.DataSource_1.ApItemValueQuery_1.Reload();	
	Chart.DataSource_1.BeginReadAsync();
}
else if (index==2)
{
	Chart.DataSource_2.EnableRT(true);	
	Chart.DataSource_2.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_2.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_2.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_2.ApItemValueQuery_1.Reload();
	Chart.DataSource_2.BeginReadAsync();	
}
else if (index==3)
{
	Chart.DataSource_3.EnableRT(true);	
	Chart.DataSource_3.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_3.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_3.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_3.ApItemValueQuery_1.Reload();
	Chart.DataSource_3.BeginReadAsync();
}
else if (index==4)
{
	Chart.DataSource_4.EnableRT(true);
	Chart.DataSource_4.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_4.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_4.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_4.ApItemValueQuery_1.Reload();
	Chart.DataSource_4.BeginReadAsync();
}
else if (index==5)
{
	Chart.DataSource_5.EnableRT(true);
	Chart.DataSource_5.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_5.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_5.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_5.ApItemValueQuery_1.Reload();
	Chart.DataSource_5.BeginReadAsync();
}
else if (index==6)
{
	Chart.DataSource_6.EnableRT(true);
	Chart.DataSource_6.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_6.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_6.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_6.ApItemValueQuery_1.Reload();
	Chart.DataSource_6.BeginReadAsync();
}
else if (index==7)
{
	Chart.DataSource_7.EnableRT(true);
	Chart.DataSource_7.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_7.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_7.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_7.ApItemValueQuery_1.Reload();
	Chart.DataSource_7.BeginReadAsync();
}
else if (index==8)
{
	Chart.DataSource_8.EnableRT(true);
	Chart.DataSource_8.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_8.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_8.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_8.ApItemValueQuery_1.Reload();
	Chart.DataSource_8.BeginReadAsync();
}
else if (index==9)
{
	Chart.DataSource_9.EnableRT(true);
	Chart.DataSource_9.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_9.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_9.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_9.ApItemValueQuery_1.Reload();
	Chart.DataSource_9.BeginReadAsync();
}
else if (index==10)
{
	Chart.DataSource_10.EnableRT(true);
	Chart.DataSource_10.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_10.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_10.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_10.ApItemValueQuery_1.Reload();
	Chart.DataSource_10.BeginReadAsync();
}
else if (index==11)
{
	Chart.DataSource_11.EnableRT(true);
	Chart.DataSource_11.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_11.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_11.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_11.ApItemValueQuery_1.Reload();
	Chart.DataSource_11.BeginReadAsync();
}
else if (index==12)
{
	Chart.DataSource_12.EnableRT(true);
	Chart.DataSource_12.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_12.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_12.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_12.ApItemValueQuery_1.Reload();
	Chart.DataSource_12.BeginReadAsync();
}
else if (index==13)
{
	Chart.DataSource_13.EnableRT(true);
	Chart.DataSource_13.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_13.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_13.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_13.ApItemValueQuery_1.Reload();
	Chart.DataSource_13.BeginReadAsync();
}
else if (index==14)
{
	Chart.DataSource_14.ApItemValueQuery_1.Reload();
	Chart.DataSource_14.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_14.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_14.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_14.ApItemValueQuery_1.Reload();
	Chart.DataSource_14.BeginReadAsync();
}
else if (index==15)
{
	Chart.DataSource_15.EnableRT(true);
	Chart.DataSource_15.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_15.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_15.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_15.ApItemValueQuery_1.Reload();
	Chart.DataSource_15.BeginReadAsync();
}
else if (index==16)
{
	Chart.DataSource_16.EnableRT(true);
	Chart.DataSource_16.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_16.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_16.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_16.ApItemValueQuery_1.Reload();
	Chart.DataSource_16.BeginReadAsync();
}
else if (index==17)
{
	Chart.DataSource_17.EnableRT(true);
	Chart.DataSource_17.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_17.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_17.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_17.ApItemValueQuery_1.Reload();
	Chart.DataSource_17.BeginReadAsync();
}
else if (index==18)
{
	Chart.DataSource_18.EnableRT(true);
	Chart.DataSource_18.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_18.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_18.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_18.ApItemValueQuery_1.Reload();
	Chart.DataSource_18.BeginReadAsync();
}
else if (index==19)
{
	Chart.DataSource_19.EnableRT(true);
	Chart.DataSource_19.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_19.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_19.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_19.ApItemValueQuery_1.Reload();
	Chart.DataSource_19.BeginReadAsync();
}
else if (index==20)
{
	Chart.DataSource_20.EnableRT(true);
	Chart.DataSource_20.ApItemValueQuery_1.Mode = unit.Const.vqmOPERATIVE;
	Chart.DataSource_20.ApItemValueQuery_1.PreloadHistoricalData = PreloadHistory;
	Chart.DataSource_20.ApItemValueQuery_1.OperativeInterval = OperativeStoredInterval.currentValue;
	Chart.DataSource_20.ApItemValueQuery_1.Reload();
	Chart.DataSource_20.BeginReadAsync();
}
]]>
			</body>
		</do>
	</object>
	<object access-modifier="private" name="TicksCountAxisX" display-name="Количество делений на оси X" uuid="002f2cf0-92f0-49e0-b169-cf944b5f4aeb" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="4"/>
	<object access-modifier="private" name="TicksCountAxisY" display-name="Количество делений на оси Y" uuid="9ca8d14e-ef24-4b33-8c09-571c5b3d3d65" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="4"/>
	<init target="TicksCountAxisX" ver="5" value="11"/>
	<init target="TicksCountAxisY" ver="5" value="11"/>
	<object access-modifier="private" name="pTheme" display-name="Тема оформления" uuid="9638431a-0073-4454-bbcb-9a572899dedf" base-type="Trends_Theme" base-type-id="3fbfa4c2-c742-4bec-94dc-d1bcb7ef25b6" base-const="true" base-ref="true" ver="4"/>
	<do-trace access-modifier="private" target="PenColor" ver="5">
		<body>
			<![CDATA[pTheme.BorderColor]]>
		</body>
	</do-trace>
	<object access-modifier="private" name="PreloadHistory" display-name="Предзагрузка истории" uuid="9ecfaa34-77cf-484c-b594-3aca09d73a33" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[// Если значение изменилось стартуем чтание данных заново
if (Value != Chart.DataSource_1.ApItemValueQuery_1.PreloadHistoricalData)
{
	private.Restart_OperativeMode();
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="OperativeStoredInterval" display-name="Хранимый интервал оперативного режима, мин" uuid="54624895-41a5-47e4-b177-ad1a72a8f727" base-type="notifying_uint4" base-type-id="2606f4f1-fd02-40e5-b3c8-9c59e02296fb" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[newValue: uint4 =  value * 60; // перевод минут в секунды
if (originalValue == newValue)
	return;

// запоминаем значение, чтобы иметь возможность его восстановить
originalValue = newValue;

// обновляем хранимый интервал
Update(originalValue);]]>
			</body>
		</do-on>
		<object access-modifier="private" name="originalValue" display-name="originalValue" uuid="4073b035-c17e-45b2-b4b9-ae5036faa2b8" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<object access-modifier="private" name="currentValue" display-name="currentValue" uuid="000698eb-4030-4359-981f-7c0ac3e50918" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		<do access-modifier="private" name="Update" display-name="Update" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[pCore.private.RightBorderStoryInterval = pParams.tRedLine;
pCore.private.LeftBorderStoryInterval = pCore.private.RightBorderStoryInterval - value * unit.Const.dtONE_SECOND;
// выходим, если текущее значение не изменилось
if (currentValue == value)
	return;

//log("Update operative interval from " + currentValue + " to " + value);

// запоминаем новое текущее значение
currentValue = value;

private.Restart_OperativeMode();]]>
			</body>
			<param access-modifier="private" name="value" display-name="" uuid="1ccad8be-7056-4a31-88d5-2a49e9db9f0c" base-type="uint4" base-type-id="a42274b8-724b-4f03-bcf9-dd8498c29f8e" ver="5"/>
		</do>
		<do access-modifier="private" name="Restore" display-name="Restore" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
			<body kind="om">
				<![CDATA[Update(originalValue);]]>
			</body>
		</do>
		<init target="originalValue" ver="5" value="600"/>
		<init target="currentValue" ver="5" value="600"/>
	</object>
	<do access-modifier="private" name="SetHistoricalInterval" display-name="SetHistoricalInterval" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[// Функция переделана на использование локального времени
//DebugTool_1.Log("SetHistoricalInterval ["+DateTime.ToString(dtFrom)+","+DateTime.ToString(dtTo)+"]");
if (dtTo <= dtFrom) return false;
dtFrom	= DateTime.ToUtc(dtFrom);
dtTo 		= DateTime.ToUtc(dtTo);

pParams.tHistRangeStart = dtFrom;
pParams.tHistRangeEnd	  = dtTo;

Chart.DataSource_1.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_1.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_2.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_2.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_3.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_3.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_4.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_4.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_5.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_5.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_6.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_6.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_7.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_7.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_8.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_8.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_9.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_9.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_10.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_10.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_11.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_11.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_12.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_12.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_13.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_13.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_14.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_14.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_15.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_15.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_16.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_16.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_17.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_17.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_18.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_18.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_19.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_19.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;
Chart.DataSource_20.ApItemValueQuery_1.HistoricalRangeStart = dtFrom;
Chart.DataSource_20.ApItemValueQuery_1.HistoricalRangeEnd = dtTo;

SetInterval(dtFrom, dtTo);
tRightLimit:uint8 = (dtTo>DateTime.UtcNow())?DateTime.UtcNow():dtTo;
Chart.RightExtrapolationLimit = tRightLimit;
return true;]]>
		</body>
		<param access-modifier="private" name="dtFrom" display-name="" uuid="fe6d6235-a0b3-40d9-ac4a-b85b264b8b39" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="3"/>
		<param access-modifier="private" name="dtTo" display-name="" uuid="e66ae35b-adda-4b19-b91e-3ea243dd952f" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="3"/>
	</do>
	<do access-modifier="private" name="HistoryRequest" display-name="HistoryRequest" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[if (index >= 1 && index <= 20)
	RequestCounter += 1;

if (index == 1)
{
	Chart.DataSource_1.CancelReadAsync();
	Chart.DataSource_1.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_1.EnableRT(false);
	Chart.DataSource_1.ApItemValueQuery_1.Reload();
	Chart.DataSource_1.BeginReadAsync();
}
else if (index == 2)
{
	Chart.DataSource_2.CancelReadAsync();
	Chart.DataSource_2.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_2.EnableRT(false);
	Chart.DataSource_2.ApItemValueQuery_1.Reload();
	Chart.DataSource_2.BeginReadAsync();
}
else if (index == 3)
{
	Chart.DataSource_3.CancelReadAsync();
	Chart.DataSource_3.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_3.EnableRT(false);
	Chart.DataSource_3.ApItemValueQuery_1.Reload();
	Chart.DataSource_3.BeginReadAsync();
}
else if (index == 4)
{
	Chart.DataSource_4.CancelReadAsync();
	Chart.DataSource_4.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_4.EnableRT(false);
	Chart.DataSource_4.ApItemValueQuery_1.Reload();
	Chart.DataSource_4.BeginReadAsync();
}
else if (index == 5)
{
	Chart.DataSource_5.CancelReadAsync();
	Chart.DataSource_5.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_5.EnableRT(false);
	Chart.DataSource_5.ApItemValueQuery_1.Reload();
	Chart.DataSource_5.BeginReadAsync();
}
else if (index == 6)
{
	Chart.DataSource_6.CancelReadAsync();
	Chart.DataSource_6.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_6.EnableRT(false);
	Chart.DataSource_6.ApItemValueQuery_1.Reload();
	Chart.DataSource_6.BeginReadAsync();
}
else if (index == 7)
{
	Chart.DataSource_7.CancelReadAsync();
	Chart.DataSource_7.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_7.EnableRT(false);
	Chart.DataSource_7.ApItemValueQuery_1.Reload();
	Chart.DataSource_7.BeginReadAsync();
}
else if (index == 8)
{
	Chart.DataSource_8.CancelReadAsync();
	Chart.DataSource_8.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_8.EnableRT(false);
	Chart.DataSource_8.ApItemValueQuery_1.Reload();
	Chart.DataSource_8.BeginReadAsync();
}
else if (index == 9)
{
	Chart.DataSource_9.CancelReadAsync();
	Chart.DataSource_9.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_9.EnableRT(false);
	Chart.DataSource_9.ApItemValueQuery_1.Reload();
	Chart.DataSource_9.BeginReadAsync();
}
else if (index == 10)
{
	Chart.DataSource_10.CancelReadAsync();
	Chart.DataSource_10.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_10.EnableRT(false);
	Chart.DataSource_10.ApItemValueQuery_1.Reload();
	Chart.DataSource_10.BeginReadAsync();
}
else if (index == 11)
{
	Chart.DataSource_11.CancelReadAsync();
	Chart.DataSource_11.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_11.EnableRT(false);
	Chart.DataSource_11.ApItemValueQuery_1.Reload();
	Chart.DataSource_11.BeginReadAsync();
}
else if (index == 12)
{
	Chart.DataSource_12.CancelReadAsync();
	Chart.DataSource_12.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_12.EnableRT(false);
	Chart.DataSource_12.ApItemValueQuery_1.Reload();
	Chart.DataSource_12.BeginReadAsync();
}
else if (index == 13)
{
	Chart.DataSource_13.CancelReadAsync();
	Chart.DataSource_13.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_13.EnableRT(false);
	Chart.DataSource_13.ApItemValueQuery_1.Reload();
	Chart.DataSource_13.BeginReadAsync();
}
else if (index == 14)
{
	Chart.DataSource_14.CancelReadAsync();
	Chart.DataSource_14.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_14.EnableRT(false);
	Chart.DataSource_14.ApItemValueQuery_1.Reload();
	Chart.DataSource_14.BeginReadAsync();
}
else if (index == 15)
{
	Chart.DataSource_15.CancelReadAsync();
	Chart.DataSource_15.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_15.EnableRT(false);
	Chart.DataSource_15.ApItemValueQuery_1.Reload();
	Chart.DataSource_15.BeginReadAsync();
}
else if (index == 16)
{
	Chart.DataSource_16.CancelReadAsync();
	Chart.DataSource_16.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_16.ApItemValueQuery_1.Active = true;
	Chart.DataSource_16.EnableRT(false);
	Chart.DataSource_16.ApItemValueQuery_1.Reload();
	Chart.DataSource_16.BeginReadAsync();
}
else if (index == 17)
{
	Chart.DataSource_17.CancelReadAsync();
	Chart.DataSource_17.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_17.EnableRT(false);
	Chart.DataSource_17.ApItemValueQuery_1.Reload();
	Chart.DataSource_17.BeginReadAsync();
}
else if (index == 18)
{
	Chart.DataSource_18.CancelReadAsync();
	Chart.DataSource_18.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_18.EnableRT(false);
	Chart.DataSource_18.ApItemValueQuery_1.Reload();
	Chart.DataSource_18.BeginReadAsync();
}
else if (index == 19)
{
	Chart.DataSource_19.CancelReadAsync();
	Chart.DataSource_19.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_19.EnableRT(false);
	Chart.DataSource_19.ApItemValueQuery_1.Reload();
	Chart.DataSource_19.BeginReadAsync();
}
else if (index == 20)
{
	Chart.DataSource_20.CancelReadAsync();
	Chart.DataSource_20.ApItemValueQuery_1.Mode = unit.Const.vqmHISTORY;
	Chart.DataSource_20.EnableRT(false);
	Chart.DataSource_20.ApItemValueQuery_1.Reload();
	Chart.DataSource_20.BeginReadAsync();
}]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="859a9436-b687-4baa-ab26-9b0fb7efbbfa" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
	</do>
	<do access-modifier="private" name="UpdateYRanges" display-name="UpdateYRanges" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[// запоминаем режим автоподстройки
pParams.bAutoRange = autoRange;
//DebugTool_1.Log("UpdateYRanges.AutoRange="+String.ToString(autoRange)+", bUserScale="+String.ToString(pParams.Charts.bUserScale));
i:int4 = 0;
n:int4 = 0;

	while (i < Chart.Axis_Y.Length)
	{
		bUserScale:bool = i==0 ? pParams.Charts[n].bUserScale : pParams.Axis[i].bUserScale;
		if (!bUserScale)	// Если не включен режим ручного масштабирования для оси
		{		
			// устанавливаем режим автоподстройки у оси
			Chart.Axis_Y[i].Scale = autoRange ? unit.Const.scAUTO : unit.Const.scFIXED;
			
			// если автоподстройка отключена, то задаем интервал по оси	
			if (!autoRange)
			{
				margin: double = 0.001 * (pParams.Axis[i].fixYmax - pParams.Axis[i].fixYmin);
				min: double = pParams.Axis[i].fixYmin - margin;
				max: double = pParams.Axis[i].fixYmax + margin;
				Chart.Axis_Y[i].SetInterval(min, max);
//		DebugTool_1.Log("UpdateYRanges["+String.ToString(i) + "]=(" + String.ToString(min) + "," + String.ToString(max) + ")");
			}
		}
		i += 1;	
	}

Chart.Update();
]]>
		</body>
		<param access-modifier="private" name="autoRange" display-name="" uuid="3e0f6bac-ea89-4d2d-9a5d-6e9c13057cbd" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
	</do>
	<do access-modifier="private" name="SetYRange" display-name="SetYRange" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[//DebugTool_1.Log("SetYRange["+Str.ToString(index)+"]=("+Str.ToString(min)+","+Str.ToString(max)+")");
if (index == 0)
	pParams.Charts[0].bUserScale = true;
else
	pParams.Axis[index].bUserScale = true;

Chart.Axis_Y[index].Scale = unit.Const.scFIXED;
Chart.Axis_Y[index].SetInterval(min, max);]]>
		</body>
		<param access-modifier="private" name="index" display-name="" uuid="d940a292-ec45-4ab8-9821-e6cc9c7094cc" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="4"/>
		<param access-modifier="private" name="min" display-name="" uuid="4950e9c5-4383-4d3f-bfa1-4853754cd544" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="4"/>
		<param access-modifier="private" name="max" display-name="" uuid="de3b890f-70ad-49f1-afe5-5d44e21710e0" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="4"/>
	</do>
	<do access-modifier="private" name="LegendValuesUpdate" display-name="LegendValuesUpdate" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[if (pCore.private.ActiveReper > 0) return;
//DebugTool_1.Log("LegendValuesUpdate");
i:int4 = 1;
while (i < Chart.RedLine.CrossPoint.Length)
{
	if (pParams.Lines[i].Used && pParams.Lines[i].TypeGraph==unit.Const.tgMAIN_GRAPH)
	{
		vv:variant = Chart.RedLine.CrossPoint[i].GetValue(unit.Const.cpVALUE);
//		DebugTool_1.Log("DataChanged Reper:"+Str.ToString(private.iActiveReper)+" Point:"+Str.ToString(i)+" Value:"+Str.ToString(Variant.ToUint8(vv,0)));
		if (Variant.IsEmpty(vv) || !UseRedLine.Value)
		{
			pCore.pLegend.SetVQT(pCore.pLegend.nRowInLegend[i], unit.Const.NULL, 0, 0, unit.Const.tmSOURCE);
		}
		else
		{
			vvs:string = pCore.private.VariantToString(vv);
			vq:variant = Chart.RedLine.CrossPoint[i].GetValue(unit.Const.cpQUALITY);
			vqs:string = pCore.private.ValueRound(Variant.ToDouble(vq, -1), 0);
			nRow:int4 = pCore.pLegend.nRowInLegend[i];
			pCore.pLegend.SetVQT(nRow, vv, Variant.ToUint8(Chart.RedLine.Value, 0)+pCore.private.TimeZone, Variant.ToUint4(vq, 0), unit.Const.tmSOURCE);
			pCore.pLegend.SetMinMaxSize(nRow, Lines.GetMinY(i), Lines.GetMaxY(i), Lines.GetSize(i));
		}
	}
	i += 1;
}
]]>
		</body>
	</do>
	<object access-modifier="private" name="pParams" display-name="pParams" uuid="a896471c-d84a-481f-82fb-a4b944e32747" base-type="Trends_Parameters" base-type-id="b3130c37-74d0-4745-864b-c3a1702c818e" base-сonst="true" base-ref="true" ver="5"/>
	<init target="pParams" ver="5">
		<object access-modifier="private" uuid="21df78a9-0148-47fe-8106-722ac01ff5a5" base-type="Trends_Parameters" base-type-id="b3130c37-74d0-4745-864b-c3a1702c818e" ver="5"/>
	</init>
	<do access-modifier="private" name="ZoomOff" display-name="ZoomOff" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[Chart.ZoomX = 0;
Chart.ZoomY = 0;
Chart.Axis_X.Zoom = 0;
i:int4 = 0;
while (i < Chart.Axis_Y.Length)
{
	Chart.Axis_Y[i].Zoom = 0;
	i += 1;
}
]]>
		</body>
	</do>
	<object access-modifier="private" name="YAxisPrecision" display-name="Точность отображения значений" uuid="17bbb09e-8796-4fee-8cc2-c628052b454d" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="2"/>
	<do-trace access-modifier="private" target="YAxisPrecision" ver="5">
		<body>
			<![CDATA[pCore.YAxisPrecision]]>
		</body>
	</do-trace>
	<object access-modifier="private" name="SelectedItem" display-name="SelectedItem" uuid="a644e701-df41-4473-8838-f7548b401a13" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="3"/>
	<object access-modifier="private" name="UseRedLine" display-name="Использовать красную линию" uuid="003bbbb0-b4ff-4dba-b92e-39d37d49cab9" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2" cardinal="1"/>
	<do access-modifier="private" name="AxisLinkUpdate" display-name="AxisLinkUpdate" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<param access-modifier="private" name="globalRanges" display-name="" uuid="3ea2c268-5f68-4e25-a89d-53af3f074759" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="5"/>
		<body kind="javascript">
			<![CDATA[
var Line = [];
Line[1] = Chart.Line_1;
Line[2] = Chart.Line_2;
Line[3] = Chart.Line_3;
Line[4] = Chart.Line_4;
Line[5] = Chart.Line_5;
Line[6] = Chart.Line_6;
Line[7] = Chart.Line_7;
Line[8] = Chart.Line_8;
Line[9] = Chart.Line_9;
Line[10] = Chart.Line_10;
Line[11] = Chart.Line_11;
Line[12] = Chart.Line_12;
Line[13] = Chart.Line_13;
Line[14] = Chart.Line_14;
Line[15] = Chart.Line_15;
Line[16] = Chart.Line_16;
Line[17] = Chart.Line_17;
Line[18] = Chart.Line_18;
Line[19] = Chart.Line_19;
Line[20] = Chart.Line_20;

//DebugTool_1.Log("AxisLinkUpdate.GlobalRanges = "+globalRanges);
pParams.bGlobalRanges = globalRanges;
if (globalRanges)
{						
	// Все линии привязаны к одной оси
	var yAxisId = Chart.Axis_Y[0].GetID();
	var isUsed = false;

	var i = 1;
	while (i <= unit.Const.MAX_LINES)
	{
		if (pParams.Lines[i].Used && !(ChartMode==unit.Const.amOPERATIVE && pParams.Lines[i].TypeGraph==unit.Const.tgFILE_GRAPH))
			isUsed = true;
		Line[i].SetAxisById(yAxisId);
		i += 1;
	}
	
	// общую ось включаем если есть графики
	Chart.Axis_Y[0].Visible = isUsed;
	// остальные выключаем
	var j = 1;
	while (j < Chart.Axis_Y.Length)
	{
		Chart.Axis_Y[j].Visible = false;
		j += 1;
	}
}
else
{
	// Для каждой линии своя ось, общую ось выключаем
	Chart.Axis_Y[0].Visible = false;
	var AxisVisible = [];	

	var i = 1;
	while (i < Chart.Axis_Y.Length)
	{
		AxisVisible[i] = false;
		i += 1;
	}
	i = 1;
	while (i < Chart.Axis_Y.Length)
	{
		if (pParams.Lines[i].Used && !(ChartMode==unit.Const.amOPERATIVE && pParams.Lines[i].TypeGraph==unit.Const.tgFILE_GRAPH)) 
		{
			// определяем к какой оси принадлежит график	
			var n = pParams.Lines[i].numAxis;
			// привязываем линию 
			Line[i].SetAxisById(Chart.Axis_Y[n].GetID());
			// видимость оси как сумма видимости всех привязанных линий
			AxisVisible[n] |= pParams.Lines[i].bVisible;
		}
		i += 1;
	}	
	i = 1;
	while (i < Chart.Axis_Y.Length)
	{
		Chart.Axis_Y[i].Visible = AxisVisible[i];
		i += 1;
	}
}

Chart.Update();
]]>
		</body>
	</do>
	<object access-modifier="private" name="UploadedFilesCount" display-name="UploadedFilesCount" uuid="857262d0-a1ce-4821-b2eb-13559d4a321a" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="4">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//===========================   Обработчик импорта данных   ===============================================
//		DebugTool_1.Log("FileReadyCount = "+Str.ToString(Value)+","+Str.ToString(FileLoadCount));
if (private.FileLoadCount > 0)
{
	if (value == -1)
	{
		EventParams[0] = "Ошибка загрузки данных из файла.";
		OnLoadData.Invoke();
	}
	else if (value == private.FileLoadCount )
	{
		// Если Количество загруженных файлов достигло количества запросов	
		private.FileLoadCount = 0;
		if (private.ExportTempPath != "")		// Если директория распаковки определена функцией LoadFromFile()
		{
			pParams.pFileSystem.RemoveRecursive(private.ExportTempPath); // Удаляем директорию распаковки 
			private.ExportTempPath = "";
		}

		// параметры общей оси		
		pParams.Axis[0].fixYmin = pParams.pExParams.Axis[0].fixYmin;
		pParams.Axis[0].fixYmax = pParams.pExParams.Axis[0].fixYmax;	
		if (pParams.pExParams.Axis[0].Yscale==unit.Const.scFIXED || pParams.pExParams.Charts[0].bUserScale)
		{
			SetYRange(0, pParams.pExParams.Axis[0].Ymin, pParams.pExParams.Axis[0].Ymax);
		}
		i:int4 = 1;
		S:uint8 = 0;		// Общее количество загруженных данных
		while (i <= value)		// Перебираем загруженные линии	
		{		 		
			iItem:int4 = private.nItemReservedForEx[i];
			pParams.LinesCount += 1; 
			if (iItem == 0) return;		// Ошибка переполнения списка графиков
			pParams.CopyLineFromEx(iItem, i);
			pParams.Lines[iItem].Used = true;
			pParams.Lines[iItem].TypeGraph = unit.Const.tgFILE_GRAPH;
			pParams.Lines[iItem].nChart = 1;
			pParams.Lines[iItem].numAxis = private.nItemReservedForEx[pParams.pExParams.Lines[i].numAxis];
			AddItem(iItem, unit.Const.tgFILE_GRAPH);
			if (pParams.pExParams.Axis[i].Yscale==unit.Const.scFIXED || pParams.pExParams.Axis[i].bUserScale)
			{
				SetYRange(iItem, pParams.pExParams.Axis[i].Ymin, pParams.pExParams.Axis[i].Ymax);
			}
			S += Chart.private.FileDataSize[i];	// Подсчет общего количества загруженных данных
			i += 1;
		}
		if (private.CoreExist())
		{
			pCore.AxisLinkUpdate(pParams.pExParams.bGlobalRanges);
			pCore.UpdateYRanges(pParams.pExParams.bAutoRange);
		}
		else
		{
			AxisLinkUpdate(pParams.pExParams.bGlobalRanges);
			UpdateYRanges(pParams.pExParams.bAutoRange);
		}

		vt1:uint8 = DateTime.ToLocal(pParams.pExParams.Xmin);
		vt2:uint8 = DateTime.ToLocal(pParams.pExParams.Xmax);
		pCore.SetHistoricalInterval(vt1, vt2);
		SetHistoricalInterval(vt1, vt2);
		
		if (pCore.private.LegendIsUse)
		{
			pCore.pLegend.Update();
			pCore.pLegend.Deselect();
		}

		EventParams[0] = String.ToString(value); 	// Количество загруженных сигналов
		EventParams[1] = String.ToString(S);			// Суммарное количество данных
		OnLoadData.Invoke();
	}	
}]]>
			</body>
		</do-on>
	</object>
	<init target="UploadedFilesCount" ver="5" value="11"/>
	<object access-modifier="private" name="SavedFilesCount" display-name="SavedFilesCount" uuid="655763f5-f4bc-47b5-92e3-c69e15e226a7" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="4"/>
	<init target="SavedFilesCount" ver="5" value="11"/>
	<object access-modifier="private" name="RequestCounter" display-name="RequestCounter" uuid="51659c87-16c3-4d05-896c-03081215a4f1" base-type="notifying_int4" base-type-id="5ccca629-a45d-46c8-a56c-83ecde8126f7" ver="5" description="" cardinal="1">
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="ValueChanged">
			<body kind="om">
				<![CDATA[//DebugTool_1.Log(String.ToString(Value) + " requests in process");
requestStatus: string = Value > 0 ? "Выполняется запрос данных..." : "";

if (requestStatus != pCore.pStatusLine.StatusText)
	pCore.pStatusLine.StatusText = requestStatus;]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="MousePressedX" display-name="MousePressedX" uuid="7b7ac2db-090d-4896-9f0b-cfe15d1402b9" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
	<object access-modifier="private" name="MousePressedY" display-name="MousePressedY" uuid="f5ffb8e2-a7ef-4985-a813-5181885d12fd" base-type="int4" base-type-id="74222947-f188-4195-8e0e-e33bd9827255" ver="2"/>
	<object access-modifier="private" name="pOnMouseRightClick" display-name="pOnMouseRightClick" uuid="9fdd9dec-6e25-4496-b18c-627f622c80c0" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5" description=""/>
	<do access-modifier="private" name="LoadFromFile" display-name="LoadFromFile" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[j:int4 = String.LastIndexOf(filePath, ".");
private.ExportTempPath = String.SubString(filePath, 0, j);
Archiver_1.AsyncUnpack(filePath, private.ExportTempPath);]]>
		</body>
		<param access-modifier="private" name="filePath" display-name="" uuid="04c35e09-3e72-4c3f-9318-3c898886eed6" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
	</do>
	<do access-modifier="private" name="LoadFromFolder" display-name="LoadFromFolder" ver="5" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="om">
			<![CDATA[UploadedFilesCount = 0;
private.FileLoadCount = 0;
pCore.ActiveMode = unit.Const.amHISTORY;				 // Переключаемся в исторический режим

paramsPath: string = pParams.pFileSystem.CombinePath(folderPath, "00.json");
if (pParams.pFileSystem.Exists(paramsPath))
	pParams.pExParams.LoadFromFile(paramsPath);
else 
	return false;
	
i: int4 = 1;
while (i <= pParams.pExParams.LinesCount)
{
	iItem: int4 = pParams.GetItemFree();
	if (iItem == 0)
	{
		EventParams[0] = "Достигнут лимит (" + String.ToString(unit.Const.MAX_LINES) + ") на количество графиков.\r\n"+
			"Освободите поле графиков и повторите загрузку.";
		OnLoadData.Invoke();
		break;
	}			
	private.nItemReservedForEx[i] = iItem;	// Запоминаем индекс графика, чтобы использовать после полной загрузки
	
	linePath: string = pParams.pFileSystem.CombinePath(folderPath, String.ToString(i) + ".json");
	if (pParams.pFileSystem.Exists(linePath))		// если очередной файл для загрузки существует
	{	
		// Последовательная загрузка датасурсов
		Lines.Load(iItem, linePath);
		private.FileLoadCount += 1;
	}
	else
	{
		return false;
	}
	pParams.Lines[iItem].Used = true;
	i += 1; 
}

return true;]]>
		</body>
		<param access-modifier="private" name="folderPath" display-name="" uuid="74f967a2-7462-423d-9305-af26b92a1059" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="4"/>
	</do>
	<object access-modifier="private" name="OnLoadData" display-name="OnLoadData" uuid="510a2ed6-9131-4cc4-a5f1-50f840f66ea4" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" base-const="true" base-ref="true" ver="5" description=""/>
	<object access-modifier="private" name="EventParams" display-name="EventParams" uuid="97fe4dfd-ce07-4f50-a6dc-2f2d02f0b4fb" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="5" description="" cardinal="2"/>
	<object access-modifier="private" name="Archiver_1" display-name="Archiver_1" uuid="9a398b24-a436-41a1-8757-d6c37fdae90b" base-type="Archiver" base-type-id="3d5db667-b706-495b-a916-9785b07dd0ae" ver="3">
		<designed target="CompressionLevel" value="1" ver="3"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="5" event="PackFinished">
			<body kind="om">
				<![CDATA[/*
if (error != "")
{
	ShowError.message = error;
	ShowError.Invoke();
}
else
{
	private.EventParams[0] = private.ExportFile;
	OnExport.Invoke();

	ShowComplete.message = "Данные сохранены в файл:\n" + private.ExportFile;
	ShowComplete.Invoke();	
}

FileManager.RemoveRecursive(private.ExportTrendsPath); //*/]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="5" event="UnpackFinished">
			<body kind="om">
				<![CDATA[if (error != "")
{
	EventParams[0] = error;
	OnLoadData.Invoke();
}
else
{
	LoadFromFolder(private.ExportTempPath);
}]]>
			</body>
		</do-on>
	</object>
	<do access-modifier="private" name="AddControlLineAtTime" display-name="Добавить реперную линию" ver="5" type="void" type-id="cfbbcafa-e13e-4354-a33a-6e57b818e4da">
		<body kind="om">
			<![CDATA[pCore.private.Initializer();
//DebugTool_1.Log("AddMarkerAtTime"+DateTime.ToString(time));

iReper:uint4 = GetNextReper();
Chart.ControlLine[iReper].Visible = true;
Chart.ControlLine[iReper].Value = time;
Chart.ControlLine[iReper].setActive(true);
pCore.private.LastAddReper[ChartMode] = iReper;
pCore.private.ActiveReper[ChartMode] = iReper;

pCore.ActiveMode = pCore.ActiveMode;  // Вызываем обновление кнопки на панели инструментов
]]>
		</body>
		<param access-modifier="private" name="time" display-name="" uuid="81d34f86-8bdb-438f-92ea-0e663fa823e2" base-type="uint8" base-type-id="c8ff7701-da6e-4d53-888a-81fa680ff561" ver="5"/>
	</do>
	<init target="PreloadHistory" ver="5" value="true"/>
	<init target="OperativeStoredInterval" ver="5" value="10"/>
	<object access-modifier="private" name="Exporter" display-name="Exporter" uuid="229ba288-9734-4c39-a63f-788b2fc51e79" base-type="Trends_Exporter" base-type-id="0ef355d8-dbf1-4bae-bc8a-c8cbf5f0598e" ver="5" description="" cardinal="1">
		<designed target="X" value="400" ver="5"/>
		<designed target="Y" value="0" ver="5"/>
		<designed target="Rotation" value="0" ver="5"/>
		<designed target="Width" value="400" ver="5"/>
		<designed target="Height" value="600" ver="5"/>
		<object access-modifier="private" name="LayoutWeight_1" display-name="LayoutWeight_1" uuid="6fa2c0b2-59e7-4153-b16b-56980af001bb" base-type="LayoutWeight" base-type-id="8f3d975c-9645-4288-9406-a8dda0527008" ver="5" description="" cardinal="1">
			<designed target="Weight" value="0" ver="5"/>
		</object>
		<init target="init_Chart" ver="5" ref="Chart"/>
		<do-trace access-modifier="private" target="ExportPath" ver="5">
			<body>
				<![CDATA[pCore.private.ExportPath]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="RootPath" ver="5">
			<body>
				<![CDATA[pCore.private.ExportPath.Root]]>
			</body>
		</do-trace>
		<do-trace access-modifier="private" target="UseServerTime" ver="5">
			<body>
				<![CDATA[pCore.UseServerTime && pCore.ActiveMode==unit.Const.amHISTORY]]>
			</body>
		</do-trace>
	</object>
</type>

